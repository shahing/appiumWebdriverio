{"version":3,"file":"lock.js","names":["commands","lock","seconds","proxyCommand","isNaN","floatSeconds","parseFloat","B","delay","unlock","isLocked"],"sources":["../../../lib/commands/lock.js"],"sourcesContent":["import B from 'bluebird';\n\nlet commands = {};\n\ncommands.lock = async function lock (seconds) {\n  await this.proxyCommand('/wda/lock', 'POST');\n  if (isNaN(seconds)) {\n    return;\n  }\n\n  const floatSeconds = parseFloat(seconds);\n  if (floatSeconds <= 0) {\n    return;\n  }\n\n  await B.delay(floatSeconds * 1000);\n  await this.proxyCommand('/wda/unlock', 'POST');\n};\n\ncommands.unlock = async function unlock () {\n  await this.proxyCommand('/wda/unlock', 'POST');\n};\n\ncommands.isLocked = async function isLocked () {\n  return await this.proxyCommand('/wda/locked', 'GET');\n};\n\nexport { commands };\nexport default commands;\n"],"mappings":";;;;;;;;AAAA;AAEA,IAAIA,QAAQ,GAAG,CAAC,CAAC;AAAC;AAElBA,QAAQ,CAACC,IAAI,GAAG,eAAeA,IAAI,CAAEC,OAAO,EAAE;EAC5C,MAAM,IAAI,CAACC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC;EAC5C,IAAIC,KAAK,CAACF,OAAO,CAAC,EAAE;IAClB;EACF;EAEA,MAAMG,YAAY,GAAGC,UAAU,CAACJ,OAAO,CAAC;EACxC,IAAIG,YAAY,IAAI,CAAC,EAAE;IACrB;EACF;EAEA,MAAME,iBAAC,CAACC,KAAK,CAACH,YAAY,GAAG,IAAI,CAAC;EAClC,MAAM,IAAI,CAACF,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;AAChD,CAAC;AAEDH,QAAQ,CAACS,MAAM,GAAG,eAAeA,MAAM,GAAI;EACzC,MAAM,IAAI,CAACN,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;AAChD,CAAC;AAEDH,QAAQ,CAACU,QAAQ,GAAG,eAAeA,QAAQ,GAAI;EAC7C,OAAO,MAAM,IAAI,CAACP,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;AACtD,CAAC;AAAC,eAGaH,QAAQ;AAAA"}