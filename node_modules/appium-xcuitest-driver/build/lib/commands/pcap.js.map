{"version":3,"file":"pcap.js","names":["MAX_CAPTURE_TIME_SEC","DEFAULT_CAPTURE_TIME_SEC","DEFAULT_EXT","pcapLogger","logger","getLogger","commands","TrafficCapture","constructor","udid","log","resultPath","mainProcess","start","timeoutSeconds","Pyidevice","collectPcap","on","stdout","stderr","info","setTimeout","interrupt","once","code","signal","debug","isCapturing","isRunning","force","interruptPromise","stop","e","warn","message","finish","cleanup","fs","exists","rimraf","mobileStartPcap","options","isSimulator","errorAndThrow","timeLimitSec","forceRestart","_trafficCapture","tempDir","path","prefix","util","uuidV4","substring","suffix","trafficCollector","opts","device","parseInt","isNaN","errors","InvalidArgumentError","mobileStopPcap","encodeBase64OrUpload"],"sources":["../../../lib/commands/pcap.js"],"sourcesContent":["import Pyidevice from '../py-ios-device-client';\nimport { fs, tempDir, logger, util } from 'appium/support';\nimport { encodeBase64OrUpload } from '../utils';\nimport { errors } from 'appium/driver';\n\n\nconst MAX_CAPTURE_TIME_SEC = 60 * 60 * 12;\nconst DEFAULT_CAPTURE_TIME_SEC = 60 * 5;\nconst DEFAULT_EXT = '.pcap';\nconst pcapLogger = logger.getLogger('pcapd');\n\nconst commands = {};\n\n\nclass TrafficCapture {\n  constructor (udid, log, resultPath) {\n    this.udid = udid;\n    this.log = log;\n    this.resultPath = resultPath;\n    this.mainProcess = null;\n  }\n\n  async start (timeoutSeconds) {\n    this.mainProcess = await new Pyidevice(this.udid).collectPcap(this.resultPath);\n    this.mainProcess.on('output', (stdout, stderr) => {\n      if (stderr) {\n        pcapLogger.info(`${stderr}`);\n      }\n    });\n    this.log.info(`Starting network traffic capture session on the device '${this.udid}'. ` +\n      `Will timeout in ${timeoutSeconds}s`);\n    setTimeout(async () => await this.interrupt(), timeoutSeconds * 1000);\n    this.mainProcess.once('exit', (code, signal) => {\n      this.log.debug(`The traffic capture session on the device '${this.udid}' has exited ` +\n        `with code ${code}, signal ${signal}`);\n    });\n  }\n\n  isCapturing () {\n    return !!(this.mainProcess?.isRunning);\n  }\n\n  async interrupt (force = false) {\n    if (this.isCapturing()) {\n      const interruptPromise = this.mainProcess.stop(force ? 'SIGTERM' : 'SIGINT');\n      this.mainProcess = null;\n      try {\n        await interruptPromise;\n      } catch (e) {\n        this.log.warn(`Cannot ${force ? 'terminate' : 'interrupt'} the traffic capture session. ` +\n          `Original error: ${e.message}`);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async finish () {\n    await this.interrupt();\n    return this.resultPath;\n  }\n\n  async cleanup () {\n    if (await fs.exists(this.resultPath)) {\n      await fs.rimraf(this.resultPath);\n    }\n  }\n}\n\n\n/**\n * @typedef {Object} StartCaptureOptions\n *\n * @property {?string|number} timeLimitSec [180] - The maximum traffic capture time, in seconds.\n * The default value is 180, the maximum value is 43200 (12 hours).\n * @property {?boolean} forceRestart [false] - Whether to restart audio capture process forcefully when\n * startPcap is called (`true`) or ignore the call until the current network traffic capture is completed.\n */\n\n/**\n * Records the given network traffic capture into a .pcap file.\n *\n * @param {?StartCaptureOptions} options - The available options.\n * @throws {Error} If network traffic capture has failed to start.\n */\ncommands.mobileStartPcap = async function mobileStartPcap (options = {}) {\n  if (this.isSimulator()) {\n    this.log.errorAndThrow('Network traffic capture only works on real devices');\n  }\n\n  const {\n    timeLimitSec = DEFAULT_CAPTURE_TIME_SEC,\n    forceRestart,\n  } = options;\n\n  if (this._trafficCapture?.isCapturing()) {\n    this.log.info(`There is an active traffic capture process`);\n    if (forceRestart) {\n      this.log.info(`Stopping it because 'forceRestart' option is set to true`);\n      await this._trafficCapture.interrupt(true);\n    } else {\n      this.log.info(`Doing nothing. ` +\n        `Set 'forceRestart' option to true if you'd like to start a new traffic capture session`);\n      return;\n    }\n  }\n  if (this._trafficCapture) {\n    await this._trafficCapture.cleanup();\n    this._trafficCapture = null;\n  }\n\n  const resultPath = await tempDir.path({\n    prefix: `appium_${util.uuidV4().substring(0, 8)}`,\n    suffix: DEFAULT_EXT,\n  });\n\n  const trafficCollector = new TrafficCapture(this.opts.device.udid, this.log, resultPath);\n\n  const timeoutSeconds = parseInt(timeLimitSec, 10);\n  if (isNaN(timeoutSeconds) || timeoutSeconds > MAX_CAPTURE_TIME_SEC || timeoutSeconds <= 0) {\n    throw new errors.InvalidArgumentError(`The timeLimitSec value must be in range [1, ${MAX_CAPTURE_TIME_SEC}] seconds. ` +\n      `The value of '${timeLimitSec}' has been passed instead.`);\n  }\n\n  try {\n    await trafficCollector.start(timeoutSeconds);\n  } catch (e) {\n    await trafficCollector.interrupt(true);\n    await trafficCollector.cleanup();\n    throw e;\n  }\n  this._trafficCapture = trafficCollector;\n};\n\n/**\n * Stop capture of the device network traffic. If no traffic capture process is running then\n * the endpoint will try to get the recently recorded file.\n * If no previously recorded file is found and no active traffic capture\n * processes are running then the method returns an empty string.\n *\n * @returns {string} Base64-encoded content of the recorded pcap file or an\n * empty string if no traffic capture has been started before.\n * @throws {Error} If there was an error while getting the capture file.\n */\ncommands.mobileStopPcap = async function mobileStopPcap () {\n  if (!this._trafficCapture) {\n    this.log.info('Network traffic collector has not been started. There is nothing to stop');\n    return '';\n  }\n\n  let resultPath;\n  try {\n    resultPath = await this._trafficCapture.finish();\n    if (!await fs.exists(resultPath)) {\n      this.log.errorAndThrow(`The network traffic capture utility has failed ` +\n        `to store the actual traffic capture at '${resultPath}'`);\n    }\n  } catch (e) {\n    await this._trafficCapture.interrupt(true);\n    await this._trafficCapture.cleanup();\n    this._trafficCapture = null;\n    throw e;\n  }\n  return await encodeBase64OrUpload(resultPath);\n};\n\nexport { commands };\nexport default commands;\n"],"mappings":"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"}