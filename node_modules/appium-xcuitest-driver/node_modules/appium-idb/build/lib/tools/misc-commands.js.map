{"version":3,"file":"misc-commands.js","names":["miscCommands","describeDevice","log","debug","udid","output","exec","fixOutputToObject","focusSimulator","openUrl","url","clearKeychain","setLocation","latitude","longitude","approve","bundleId","permissions","JSON","stringify","command","args","_","isArray","push","addContacts","dbPath"],"sources":["../../../lib/tools/misc-commands.js"],"sourcesContent":["import log from '../logger.js';\nimport _ from 'lodash';\nimport { fixOutputToObject } from '../helpers';\n\n\nconst miscCommands = {};\n\n/**\n * Returns metadata about the specified target.\n * Output example:\n * target_description {\n *   udid: \"14EBDEDE-0C9E-46B4-B1FF-0881F11D0E75\"\n *   name: \"iPhone X\\312\\200\"\n *   screen_dimensions {\n *     width: 828\n *     height: 1792\n *     density: 2.0\n *     width_points: 414\n *     height_points: 896\n *   }\n *   state: \"booted\"\n *   target_type: \"simulator\"\n *   os_version: \"iOS 12.2\"\n *   architecture: \"x86_64\"\n * }\n *\n * @returns {object} The command output parsed to an object\n */\nmiscCommands.describeDevice = async function describeDevice () {\n  log.debug(`Describing the device '${this.udid}'`);\n  const output = await this.exec(['describe'], ['--json']);\n  return fixOutputToObject(output);\n};\n\n/**\n * Brings a simulators window to the foreground.\n */\nmiscCommands.focusSimulator = async function focusSimulator () {\n  log.debug(`Focusing Simulator '${this.udid}'`);\n  await this.exec(['focus']);\n};\n\n/**\n * Opens the specified URL on the target.\n * This works both with web addresses and URL schemes present on the target.\n *\n * @param {string} url The url to open\n */\nmiscCommands.openUrl = async function openUrl (url) {\n  log.debug(`Opening URL '${url}' on the device '${this.udid}'`);\n  await this.exec(['open'], [url]);\n};\n\n/**\n * Clear the entire keychain on Simulator.\n */\nmiscCommands.clearKeychain = async function clearKeychain () {\n  log.debug(`Clearing keychain on the device '${this.udid}'`);\n  await this.exec(['clear-keychain']);\n};\n\n/**\n * Overrides a simulators location\n *\n * @param {string|number} latitude The latitude value\n * @param {string|number} longitude The longitude value\n */\nmiscCommands.setLocation = async function setLocation (latitude, longitude) {\n  log.debug(`Setting location (${latitude}, ${longitude}) on the device '${this.udid}'`);\n  await this.exec(['set-location'], [latitude, longitude]);\n};\n\n/**\n * Programmatically approve permission for an app on Simulator\n *\n * @param {string} bundleId Application identifier to set the permissions for\n * @param {string|Array<string>} permissions The permission(s) to apply. Can be\n * one of {photos,camera,camera}\n */\nmiscCommands.approve = async function approve (bundleId, permissions) {\n  log.debug(`Approving permissions (${JSON.stringify(permissions)}) for '${bundleId}' ` +\n    `on the device '${this.udid}'`);\n  const command = ['approve'];\n  const args = [];\n  if (_.isArray(permissions)) {\n    args.push(...permissions);\n  } else {\n    args.push(permissions);\n  }\n  args.push(bundleId);\n  await this.exec(command, args);\n};\n\n/**\n * Overwrite the simulators contacts db\n *\n * @param {string} dbPath Full path to the SQLite db containing the contacts\n */\nmiscCommands.addContacts = async function addContacts (dbPath) {\n  log.debug(`Adding contacts from (${dbPath}) to the device '${this.udid}'`);\n  await this.exec(['contacts', 'update'], [dbPath]);\n};\n\nexport default miscCommands;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAGA,MAAMA,YAAY,GAAG,CAAC,CAAC;AAuBvBA,YAAY,CAACC,cAAc,GAAG,eAAeA,cAAc,GAAI;EAC7DC,eAAG,CAACC,KAAK,CAAE,0BAAyB,IAAI,CAACC,IAAK,GAAE,CAAC;EACjD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;EACxD,OAAO,IAAAC,0BAAiB,EAACF,MAAM,CAAC;AAClC,CAAC;AAKDL,YAAY,CAACQ,cAAc,GAAG,eAAeA,cAAc,GAAI;EAC7DN,eAAG,CAACC,KAAK,CAAE,uBAAsB,IAAI,CAACC,IAAK,GAAE,CAAC;EAC9C,MAAM,IAAI,CAACE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;AAC5B,CAAC;AAQDN,YAAY,CAACS,OAAO,GAAG,eAAeA,OAAO,CAAEC,GAAG,EAAE;EAClDR,eAAG,CAACC,KAAK,CAAE,gBAAeO,GAAI,oBAAmB,IAAI,CAACN,IAAK,GAAE,CAAC;EAC9D,MAAM,IAAI,CAACE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAACI,GAAG,CAAC,CAAC;AAClC,CAAC;AAKDV,YAAY,CAACW,aAAa,GAAG,eAAeA,aAAa,GAAI;EAC3DT,eAAG,CAACC,KAAK,CAAE,oCAAmC,IAAI,CAACC,IAAK,GAAE,CAAC;EAC3D,MAAM,IAAI,CAACE,IAAI,CAAC,CAAC,gBAAgB,CAAC,CAAC;AACrC,CAAC;AAQDN,YAAY,CAACY,WAAW,GAAG,eAAeA,WAAW,CAAEC,QAAQ,EAAEC,SAAS,EAAE;EAC1EZ,eAAG,CAACC,KAAK,CAAE,qBAAoBU,QAAS,KAAIC,SAAU,oBAAmB,IAAI,CAACV,IAAK,GAAE,CAAC;EACtF,MAAM,IAAI,CAACE,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,CAACO,QAAQ,EAAEC,SAAS,CAAC,CAAC;AAC1D,CAAC;AASDd,YAAY,CAACe,OAAO,GAAG,eAAeA,OAAO,CAAEC,QAAQ,EAAEC,WAAW,EAAE;EACpEf,eAAG,CAACC,KAAK,CAAE,0BAAyBe,IAAI,CAACC,SAAS,CAACF,WAAW,CAAE,UAASD,QAAS,IAAG,GAClF,kBAAiB,IAAI,CAACZ,IAAK,GAAE,CAAC;EACjC,MAAMgB,OAAO,GAAG,CAAC,SAAS,CAAC;EAC3B,MAAMC,IAAI,GAAG,EAAE;EACf,IAAIC,eAAC,CAACC,OAAO,CAACN,WAAW,CAAC,EAAE;IAC1BI,IAAI,CAACG,IAAI,CAAC,GAAGP,WAAW,CAAC;EAC3B,CAAC,MAAM;IACLI,IAAI,CAACG,IAAI,CAACP,WAAW,CAAC;EACxB;EACAI,IAAI,CAACG,IAAI,CAACR,QAAQ,CAAC;EACnB,MAAM,IAAI,CAACV,IAAI,CAACc,OAAO,EAAEC,IAAI,CAAC;AAChC,CAAC;AAODrB,YAAY,CAACyB,WAAW,GAAG,eAAeA,WAAW,CAAEC,MAAM,EAAE;EAC7DxB,eAAG,CAACC,KAAK,CAAE,yBAAwBuB,MAAO,oBAAmB,IAAI,CAACtB,IAAK,GAAE,CAAC;EAC1E,MAAM,IAAI,CAACE,IAAI,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAACoB,MAAM,CAAC,CAAC;AACnD,CAAC;AAAC,eAEa1B,YAAY;AAAA"}