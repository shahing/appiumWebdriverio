{"version":3,"file":"index.js","names":["SYSLOG_SERVICE_NAME","START_MESSAGE","SyslogService","BaseServiceSocket","constructor","socketClient","_decoder","SyslogDecoder","KB","_socketClient","pipe","_assignClientFailureHandlers","start","onData","on","write"],"sources":["../../../lib/syslog/index.js"],"sourcesContent":["import SyslogDecoder from './transformer/syslog-decoder';\nimport { KB } from '../constants';\nimport { BaseServiceSocket } from '../base-service';\n\n\n//We just need to write any data to the client. It doesn't matter what we send\nconst SYSLOG_SERVICE_NAME = 'com.apple.syslog_relay';\nconst START_MESSAGE = 'start';\n\nclass SyslogService extends BaseServiceSocket {\n  constructor (socketClient) {\n    super(socketClient);\n\n    this._decoder = new SyslogDecoder(5 * KB);\n    this._socketClient.pipe(this._decoder);\n    this._assignClientFailureHandlers(this._decoder);\n  }\n  /** The callback function which will be called during log listening\n   * @name LogCallback\n   * @function\n   * @param {string} log The log that is sent from the phone\n  */\n\n  /**\n   * Start recieving logs from the phone. The callback when a log is recieved\n   * @param {LogCallback} onData\n   */\n  start (onData) {\n    this._decoder.on('data', onData);\n    this._socketClient.write(START_MESSAGE);\n  }\n}\n\nexport { SyslogService, SYSLOG_SERVICE_NAME };\nexport default SyslogService;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAIA,MAAMA,mBAAmB,GAAG,wBAAwB;AAAC;AACrD,MAAMC,aAAa,GAAG,OAAO;AAE7B,MAAMC,aAAa,SAASC,8BAAiB,CAAC;EAC5CC,WAAW,CAAEC,YAAY,EAAE;IACzB,KAAK,CAACA,YAAY,CAAC;IAEnB,IAAI,CAACC,QAAQ,GAAG,IAAIC,sBAAa,CAAC,CAAC,GAAGC,aAAE,CAAC;IACzC,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAAC;IACtC,IAAI,CAACK,4BAA4B,CAAC,IAAI,CAACL,QAAQ,CAAC;EAClD;EAWAM,KAAK,CAAEC,MAAM,EAAE;IACb,IAAI,CAACP,QAAQ,CAACQ,EAAE,CAAC,MAAM,EAAED,MAAM,CAAC;IAChC,IAAI,CAACJ,aAAa,CAACM,KAAK,CAACd,aAAa,CAAC;EACzC;AACF;AAAC;AAAA,eAGcC,aAAa;AAAA"}