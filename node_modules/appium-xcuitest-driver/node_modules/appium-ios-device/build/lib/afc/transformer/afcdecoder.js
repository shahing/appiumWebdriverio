"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AfcDecoder = void 0;
require("source-map-support/register");
var _stream = _interopRequireDefault(require("stream"));
var _protocol = require("../protocol");
class AfcDecoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }
  _transform(data, encoding, onData) {
    this._decode(data);
    onData();
  }
  _decode(data) {
    const magicNumber = data.slice(0, 8);
    if (magicNumber.compare(_protocol.MAGIC_NUMBER) !== 0) {
      throw new Error(`Unexpected magic number: ${magicNumber}`);
    }
    const messageLength = this.readUInt64LE(data, 8);
    const thisLength = this.readUInt64LE(data, 16);
    const packetNumber = this.readUInt64LE(data, 24);
    const opCode = this.readUInt64LE(data, 32);
    const headerPayload = data.slice(_protocol.AFC_PACKET_HEADER_SIZE, thisLength);
    const content = data.slice(thisLength, messageLength);
    this.push({
      messageLength,
      packetNumber,
      opCode,
      headerPayload,
      content
    });
  }
  readUInt64LE(buffer, index) {
    return buffer.readUInt32LE(index);
  }
}
exports.AfcDecoder = AfcDecoder;
var _default = AfcDecoder;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZmNEZWNvZGVyIiwiU3RyZWFtIiwiVHJhbnNmb3JtIiwiY29uc3RydWN0b3IiLCJvYmplY3RNb2RlIiwiX3RyYW5zZm9ybSIsImRhdGEiLCJlbmNvZGluZyIsIm9uRGF0YSIsIl9kZWNvZGUiLCJtYWdpY051bWJlciIsInNsaWNlIiwiY29tcGFyZSIsIk1BR0lDX05VTUJFUiIsIkVycm9yIiwibWVzc2FnZUxlbmd0aCIsInJlYWRVSW50NjRMRSIsInRoaXNMZW5ndGgiLCJwYWNrZXROdW1iZXIiLCJvcENvZGUiLCJoZWFkZXJQYXlsb2FkIiwiQUZDX1BBQ0tFVF9IRUFERVJfU0laRSIsImNvbnRlbnQiLCJwdXNoIiwiYnVmZmVyIiwiaW5kZXgiLCJyZWFkVUludDMyTEUiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvYWZjL3RyYW5zZm9ybWVyL2FmY2RlY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmVhbSBmcm9tICdzdHJlYW0nO1xuaW1wb3J0IHsgTUFHSUNfTlVNQkVSLCBBRkNfUEFDS0VUX0hFQURFUl9TSVpFIH0gZnJvbSAnLi4vcHJvdG9jb2wnO1xuXG5cbmNsYXNzIEFmY0RlY29kZXIgZXh0ZW5kcyBTdHJlYW0uVHJhbnNmb3JtIHtcblxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB9XG5cbiAgX3RyYW5zZm9ybSAoZGF0YSwgZW5jb2RpbmcsIG9uRGF0YSkge1xuICAgIHRoaXMuX2RlY29kZShkYXRhKTtcbiAgICBvbkRhdGEoKTtcbiAgfVxuXG4gIF9kZWNvZGUgKGRhdGEpIHtcbiAgICBjb25zdCBtYWdpY051bWJlciA9IGRhdGEuc2xpY2UoMCwgOCk7XG4gICAgaWYgKG1hZ2ljTnVtYmVyLmNvbXBhcmUoTUFHSUNfTlVNQkVSKSAhPT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG1hZ2ljIG51bWJlcjogJHttYWdpY051bWJlcn1gKTtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZUxlbmd0aCA9IHRoaXMucmVhZFVJbnQ2NExFKGRhdGEsIDgpO1xuICAgIGNvbnN0IHRoaXNMZW5ndGggPSB0aGlzLnJlYWRVSW50NjRMRShkYXRhLCAxNik7XG4gICAgY29uc3QgcGFja2V0TnVtYmVyID0gdGhpcy5yZWFkVUludDY0TEUoZGF0YSwgMjQpO1xuICAgIGNvbnN0IG9wQ29kZSA9IHRoaXMucmVhZFVJbnQ2NExFKGRhdGEsIDMyKTtcblxuICAgIGNvbnN0IGhlYWRlclBheWxvYWQgPSBkYXRhLnNsaWNlKEFGQ19QQUNLRVRfSEVBREVSX1NJWkUsIHRoaXNMZW5ndGgpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkYXRhLnNsaWNlKHRoaXNMZW5ndGgsIG1lc3NhZ2VMZW5ndGgpO1xuXG4gICAgdGhpcy5wdXNoKHsgbWVzc2FnZUxlbmd0aCwgcGFja2V0TnVtYmVyLCBvcENvZGUsIGhlYWRlclBheWxvYWQsIGNvbnRlbnQgfSk7XG4gIH1cblxuICByZWFkVUludDY0TEUgKGJ1ZmZlciwgaW5kZXgpIHtcbiAgICAvLyBJZ25vcmUgdGhlIGZpcnN0IDQgYnl0ZXMgc2luY2Ugd2UgZG9uJ3QgZG8gYW55dGhpbmcgd2l0aCBsb25nc1xuICAgIHJldHVybiBidWZmZXIucmVhZFVJbnQzMkxFKGluZGV4KTtcbiAgfVxufVxuXG5leHBvcnQgeyBBZmNEZWNvZGVyIH07XG5leHBvcnQgZGVmYXVsdCBBZmNEZWNvZGVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFHQSxNQUFNQSxVQUFVLFNBQVNDLGVBQU0sQ0FBQ0MsU0FBUyxDQUFDO0VBRXhDQyxXQUFXLEdBQUk7SUFDYixLQUFLLENBQUM7TUFBRUMsVUFBVSxFQUFFO0lBQUssQ0FBQyxDQUFDO0VBQzdCO0VBRUFDLFVBQVUsQ0FBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRTtJQUNsQyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDO0lBQ2xCRSxNQUFNLEVBQUU7RUFDVjtFQUVBQyxPQUFPLENBQUVILElBQUksRUFBRTtJQUNiLE1BQU1JLFdBQVcsR0FBR0osSUFBSSxDQUFDSyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwQyxJQUFJRCxXQUFXLENBQUNFLE9BQU8sQ0FBQ0Msc0JBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtNQUMzQyxNQUFNLElBQUlDLEtBQUssQ0FBRSw0QkFBMkJKLFdBQVksRUFBQyxDQUFDO0lBQzVEO0lBQ0EsTUFBTUssYUFBYSxHQUFHLElBQUksQ0FBQ0MsWUFBWSxDQUFDVixJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELE1BQU1XLFVBQVUsR0FBRyxJQUFJLENBQUNELFlBQVksQ0FBQ1YsSUFBSSxFQUFFLEVBQUUsQ0FBQztJQUM5QyxNQUFNWSxZQUFZLEdBQUcsSUFBSSxDQUFDRixZQUFZLENBQUNWLElBQUksRUFBRSxFQUFFLENBQUM7SUFDaEQsTUFBTWEsTUFBTSxHQUFHLElBQUksQ0FBQ0gsWUFBWSxDQUFDVixJQUFJLEVBQUUsRUFBRSxDQUFDO0lBRTFDLE1BQU1jLGFBQWEsR0FBR2QsSUFBSSxDQUFDSyxLQUFLLENBQUNVLGdDQUFzQixFQUFFSixVQUFVLENBQUM7SUFDcEUsTUFBTUssT0FBTyxHQUFHaEIsSUFBSSxDQUFDSyxLQUFLLENBQUNNLFVBQVUsRUFBRUYsYUFBYSxDQUFDO0lBRXJELElBQUksQ0FBQ1EsSUFBSSxDQUFDO01BQUVSLGFBQWE7TUFBRUcsWUFBWTtNQUFFQyxNQUFNO01BQUVDLGFBQWE7TUFBRUU7SUFBUSxDQUFDLENBQUM7RUFDNUU7RUFFQU4sWUFBWSxDQUFFUSxNQUFNLEVBQUVDLEtBQUssRUFBRTtJQUUzQixPQUFPRCxNQUFNLENBQUNFLFlBQVksQ0FBQ0QsS0FBSyxDQUFDO0VBQ25DO0FBQ0Y7QUFBQztBQUFBLGVBR2N6QixVQUFVO0FBQUEifQ==