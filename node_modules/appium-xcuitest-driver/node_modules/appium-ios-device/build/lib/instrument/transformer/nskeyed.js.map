{"version":3,"file":"nskeyed.js","names":["NSKEYED_ARCHIVE_VERSION","NULL_UID","plistlib","UID","CYCLE_TOKEN","PRIMITIVE_TYPES","NON_ENCODABLE_TYPES","NSKEYEDARCHIVER","UNIX2APPLE_TIMESTAMP_SECOND","ArchivedObject","constructor","object","unarchiver","_unarchiver","decodeIndex","index","decodeObject","decode","key","decodeKey","ArchivingObject","archiver","_archiveObj","_archiver","encode","val","BaseArchiveHandler","decodeArchive","archive","Error","encodeArchive","obj","DictArchive","keyUids","valUids","d","i","length","ListArchive","uids","map","bind","DTTapMessagePlist","NSError","NSException","NSURL","base","relative","_base","_relative","$class","NSDate","data","_data","NSMutableString","NSMutableData","NSUUID","uuidStringify","Buffer","from","uuidParse","buffer","XCTCapabilities","NSNull","UNARCHIVE_CLASS_MAP","DTSysmonTapMessage","DTTapHeartbeatMessage","DTTapMessageArchive","DTKTraceTapMessage","ErrorArchive","ExceptionArchive","NSDictionary","NSMutableDictionary","NSArray","NSMutableArray","NSMutableSet","NSSet","Unarchive","inputBytes","input","unpackedUids","topUID","objects","unpackArchiveHeader","plist","parseBuffer","$archiver","$version","top","$top","root","JSON","stringify","$objects","classForUid","meta","name","$classname","klass","_","isNil","isUndefined","rawObj","klassObj","toObject","Archive","inputObject","classMap","uidForArchiver","push","isNull","includes","archiveObj","encodeTopLevel","Array","encodeArray","Set","encodeSet","Object","objName","encodeDict","objs","keys","values","toBytes","bplistCreate","unarchive","updateNSKeyedArchiveClass","subClass","isFunction","prototype"],"sources":["../../../../lib/instrument/transformer/nskeyed.js"],"sourcesContent":["import plistlib from 'bplist-parser';\nimport bplistCreate from 'bplist-creator';\nimport {parse as uuidParse, stringify as uuidStringify} from 'uuid';\nimport _ from 'lodash';\n\nconst NSKEYED_ARCHIVE_VERSION = 100_000;\nconst NULL_UID = new plistlib.UID(0);\nconst CYCLE_TOKEN = 'CycleToken';\nconst PRIMITIVE_TYPES = ['Number', 'String', 'Boolean', 'UID', 'Buffer'];\nconst NON_ENCODABLE_TYPES = ['number', 'boolean'];\nconst NSKEYEDARCHIVER = 'NSKeyedArchiver';\nconst UNIX2APPLE_TIMESTAMP_SECOND = 978307200;\n\n\nclass ArchivedObject {\n  /**\n   * Stateful wrapper around Archive for an object being archived.\n   * @param {Object} object\n   * @param {Unarchive} unarchiver\n   * @constructor\n   */\n  constructor (object, unarchiver) {\n    this.object = object;\n    this._unarchiver = unarchiver;\n  }\n\n  decodeIndex (index) {\n    return this._unarchiver.decodeObject(index);\n  }\n\n  decode (key) {\n    return this._unarchiver.decodeKey(this.object, key);\n  }\n}\n\nclass ArchivingObject {\n  /**\n   * Stateful wrapper around Unarchive for an archived object\n   * @param {Object} object\n   * @param {Archive} archiver\n   * @constructor\n   */\n  constructor (object, archiver) {\n    this._archiveObj = object;\n    this._archiver = archiver;\n  }\n\n  encode (key, val) {\n    this._archiveObj[key] = this._archiver.encode(val);\n  }\n}\n\n/**\n * This class must be inherited when creating an archive/unarchive subclass\n * And you need to call `updateNSKeyedArchiveClass` add subclass to archive/unarchive object\n */\nclass BaseArchiveHandler {\n  /**\n   * @param {ArchivedObject} archive\n   */\n  // eslint-disable-next-line no-unused-vars\n  decodeArchive (archive) {\n    throw new Error(`Did not know how to decode the object`);\n  }\n\n  /**\n   * @param {Object} obj  an instance of this class\n   * @param {ArchivingObject} archive\n   */\n  // eslint-disable-next-line no-unused-vars\n  encodeArchive (obj, archive) {\n    throw new Error(`Did not know how to encode the object`);\n  }\n}\n\n/**\n * \"Delegate for packing/unpacking NS(Mutable)Dictionary objects\"\n */\nclass DictArchive extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    const keyUids = archive.decode('NS.keys');\n    const valUids = archive.decode('NS.objects');\n    const d = {};\n    for (let i = 0; i < keyUids.length ; i++) {\n      const key = archive.decodeIndex(keyUids[i]);\n      d[key] = archive.decodeIndex(valUids[i]);\n    }\n    return d;\n  }\n}\n\n/**\n * Delegate for packing/unpacking NS(Mutable)Array objects\n */\nclass ListArchive extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    const uids = archive.decode('NS.objects');\n    return uids.map(archive.decodeIndex.bind(archive));\n  }\n}\n\nclass DTTapMessagePlist extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return archive.decode('DTTapMessagePlist');\n  }\n}\n\nclass NSError extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return {\n      '$class': 'NSError',\n      'domain': archive.decode('NSDomain'),\n      'userinfo': archive.decode('NSUserInfo'),\n      'code': archive.decode('NSCode')\n    };\n  }\n}\n\nclass NSException extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return {\n      '$class': 'NSException',\n      'reason': archive.decode('NS.reason'),\n      'userinfo': archive.decode('userinfo'),\n      'name': archive.decode('NS.name')\n    };\n  }\n}\n\nclass NSURL extends BaseArchiveHandler {\n  /**\n   * @param {*} base\n   * @param {string} relative usually ios device relative path e.g: file://xx/\n   */\n  constructor (base, relative) {\n    super();\n    this._base = base;\n    this._relative = relative;\n  }\n\n  decodeArchive (archive) {\n    return {$class: 'NSURL', base: archive.decode('NS.base'), relative: archive.decode('NS.relative')};\n  }\n\n  encodeArchive (obj, archive) {\n    archive.encode('NS.base', obj._base);\n    archive.encode('NS.relative', obj._relative);\n  }\n}\n\nclass NSDate extends BaseArchiveHandler {\n  /**\n   * @param {number} data timestamp in seconds\n   */\n  constructor (data) {\n    super();\n    this._data = data;\n  }\n\n  decodeArchive (archive) {\n    return UNIX2APPLE_TIMESTAMP_SECOND + archive.decode('NS.time');\n  }\n\n  encodeArchive (obj, archive) {\n    archive.encode('NS.time', obj._data - UNIX2APPLE_TIMESTAMP_SECOND);\n  }\n}\n\nclass NSMutableString extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return archive.decode('NS.string');\n  }\n}\n\nclass NSMutableData extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return archive.decode('NS.data');\n  }\n}\n\nclass NSUUID extends BaseArchiveHandler {\n  /**\n   * @param {string} data uuid format data e.g:00000000-0000-0000-0000-000000000000\n   */\n  constructor (data) {\n    super();\n    this._data = data;\n  }\n\n  decodeArchive (archive) {\n    return uuidStringify(archive.decode('NS.uuidbytes'));\n  }\n\n  encodeArchive (obj, archive) {\n    archive._archiveObj['NS.uuidbytes'] = Buffer.from(uuidParse(obj._data).buffer);\n  }\n}\n\nclass XCTCapabilities extends BaseArchiveHandler {\n  decodeArchive (archive) {\n    return archive.decode('capabilities-dictionary');\n  }\n}\n\nclass NSNull extends BaseArchiveHandler {\n  decodeArchive () {\n    return null;\n  }\n}\n\n/**\n * decode and encode Archive of currently known data formats\n */\nconst UNARCHIVE_CLASS_MAP = {\n  DTTapMessagePlist,\n  DTSysmonTapMessage: DTTapMessagePlist,\n  DTTapHeartbeatMessage: DTTapMessagePlist,\n  DTTapMessageArchive: DTTapMessagePlist,\n  DTKTraceTapMessage: DTTapMessagePlist,\n  ErrorArchive: NSError,\n  ExceptionArchive: NSException,\n  NSDictionary: DictArchive,\n  NSMutableDictionary: DictArchive,\n  NSArray: ListArchive,\n  NSMutableArray: ListArchive,\n  NSMutableSet: ListArchive,\n  NSSet: ListArchive,\n  NSDate,\n  NSError,\n  NSException,\n  NSMutableString,\n  NSMutableData,\n  NSNull,\n  NSUUID,\n  NSURL,\n  XCTCapabilities\n};\n\n/**\n * Capable of unpacking an archived object tree in the NSKeyedArchive format.\n * Apple's implementation can be found here:\n * https://github.com/apple/swift-corelibs-foundation/blob/main/Sources/Foundation/NSKeyedUnarchiver.swift\n */\nclass Unarchive {\n  constructor (inputBytes) {\n    this.input = inputBytes;\n    this.unpackedUids = {};\n    this.topUID = NULL_UID;\n    this.objects = [];\n  }\n\n  unpackArchiveHeader () {\n    const plist = plistlib.parseBuffer(this.input)[0];\n    if (plist.$archiver !== NSKEYEDARCHIVER) {\n      throw new Error(`unsupported encoder: ${plist.$archiver}`);\n    }\n    if (plist.$version !== NSKEYED_ARCHIVE_VERSION) {\n      throw new Error(`expected ${NSKEYED_ARCHIVE_VERSION}, got ${plist.$version }`);\n    }\n    const top = plist.$top;\n    const topUID = top.root;\n    if (!topUID) {\n      throw new Error(`top object did not have a UID! dump: ${JSON.stringify(top)}`);\n    }\n    this.topUID = topUID;\n    this.objects = plist.$objects;\n  }\n\n  /**\n   * use the UNARCHIVE_CLASS_MAP to find the unarchiving delegate of a uid\n   */\n  classForUid (index) {\n    const meta = this.objects[index.UID];\n    const name = meta.$classname;\n    const klass = UNARCHIVE_CLASS_MAP[name];\n    if (!klass) {\n      throw new Error(`no mapping for ${name} in UNARCHIVE_CLASS_MAP`);\n    }\n    return klass;\n  }\n\n  decodeKey (obj, key) {\n    const val = obj[key];\n    return _.isNil(val?.UID) ? val : this.decodeObject(val);\n  }\n\n  decodeObject (index) {\n    if (index === NULL_UID) {\n      return null;\n    }\n    const obj = this.unpackedUids[index];\n    if (obj === CYCLE_TOKEN) {\n      throw new Error(`archive has a cycle with ${index}`);\n    }\n    if (!_.isUndefined(obj)) {\n      return obj;\n    }\n    const rawObj = this.objects[index.UID];\n    this.unpackedUids[index.UID] = CYCLE_TOKEN;\n\n    if (!rawObj?.$class) {\n      this.unpackedUids[index.UID] = obj;\n      return rawObj;\n    }\n    const klass = this.classForUid(rawObj.$class);\n    const klassObj = new klass().decodeArchive(new ArchivedObject(rawObj, this));\n    this.unpackedUids[index.UID] = klassObj;\n    return klassObj;\n  }\n\n  toObject () {\n    this.unpackArchiveHeader();\n    return this.decodeObject(this.topUID);\n  }\n}\n\n/**\n * Capable of packing an object tree into the NSKeyedArchive format.\n * Apple's implementation can be found here:\n * https://github.com/apple/swift-corelibs-foundation/blob/main/Sources/Foundation/NSKeyedArchiver.swift\n */\nclass Archive {\n  constructor (inputObject) {\n    this.input = inputObject;\n    this.classMap = {};\n    this.objects = ['$null']; // objects that go directly into the archive, always start with $null\n  }\n\n  uidForArchiver (archiver) {\n    let val = this.classMap[archiver];\n    if (val) {\n      return new plistlib.UID(val);\n    }\n    this.classMap[archiver] = this.objects.length;\n    val = new plistlib.UID(this.objects.length);\n    this.objects.push({\n      '$classes': [archiver],\n      '$classname': archiver\n    });\n    return val;\n  }\n\n  archive (obj) {\n    if (_.isUndefined(obj) || _.isNull(obj)) {\n      return NULL_UID;\n    }\n    const index = new plistlib.UID(this.objects.length);\n    if (PRIMITIVE_TYPES.includes(obj.constructor.name)) {\n      this.objects.push(obj);\n      return index;\n    }\n    const archiveObj = {};\n    this.objects.push(archiveObj);\n    this.encodeTopLevel(obj, archiveObj);\n    return index;\n  }\n\n  encode (val) {\n    if (NON_ENCODABLE_TYPES.includes(typeof val)) {\n      return val;\n    }\n    return this.archive(val);\n  }\n\n  encodeTopLevel (obj, archiveObj) {\n    if (obj instanceof Array) {\n      return this.encodeArray(obj, archiveObj);\n    } else if (obj instanceof Set) {\n      return this.encodeSet(obj, archiveObj);\n    } else if (obj instanceof Object) {\n      const objName = obj.constructor.name;\n      // Only special class instance are useful, such as NSURL, NSUUID, NSDate.\n      // And this class must also have the encodeArchive method\n      if (objName in UNARCHIVE_CLASS_MAP) {\n        archiveObj.$class = this.uidForArchiver(objName);\n        obj.encodeArchive(obj, new ArchivingObject(archiveObj, this));\n      } else {\n        return this.encodeDict(obj, archiveObj);\n      }\n    } else {\n      throw Error(`Unable to encode types: ${typeof obj}`);\n    }\n  }\n\n  encodeArray (objs, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('NSArray');\n    archiveObj['NS.objects'] = objs.map(this.archive.bind(this));\n  }\n\n  encodeSet (objs, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('NSSet');\n    archiveObj['NS.objects'] = objs.map(this.archive.bind(this));\n  }\n\n  encodeDict (obj, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('NSDictionary');\n    archiveObj['NS.keys'] = _.keys(obj).map(this.archive.bind(this));\n    archiveObj['NS.objects'] = _.values(obj).map(this.archive.bind(this));\n  }\n\n  toBytes () {\n    if (this.objects.length === 1) {\n      this.archive(this.input);\n    }\n    const d = {\n      '$version': NSKEYED_ARCHIVE_VERSION,\n      '$archiver': NSKEYEDARCHIVER,\n      '$top': {'root': new plistlib.UID(1)},\n      '$objects': this.objects\n    };\n    return bplistCreate(d);\n  }\n}\n\n/**\n * Creates NSKeyed Buffer from an object\n * @param {Object} inputObject\n * @returns {Buffer} NSKeyed Buffer\n */\nfunction archive (inputObject) {\n  return new Archive(inputObject).toBytes();\n}\n\n/**\n * Parses NSKeyed Buffer into JS Object\n * @param {Buffer} inputBytes NSKeyed Buffer\n * @returns {Object} JS Object\n */\nfunction unarchive (inputBytes) {\n  return new Unarchive(inputBytes).toObject();\n}\n\n/**\n * Update unknown NSKeyedArchive types for packing/unpacking\n * @param {String} name packing/unpacking key name\n * @param {BaseArchiveHandler} subClass inherit from BaseArchiveHandler class\n */\nfunction updateNSKeyedArchiveClass (name, subClass) {\n  if (!_.isFunction(subClass.prototype?.decodeArchive) && !_.isFunction(subClass.prototype?.encodeArchive)) {\n    throw Error('subClass must have decodeArchive or encodeArchive methods');\n  }\n  if (!(name in UNARCHIVE_CLASS_MAP)) {\n    UNARCHIVE_CLASS_MAP[name] = subClass;\n  }\n}\n\nexport { updateNSKeyedArchiveClass, BaseArchiveHandler, NSURL, NSUUID, NSDate, unarchive, archive};\n"],"mappings":"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"}