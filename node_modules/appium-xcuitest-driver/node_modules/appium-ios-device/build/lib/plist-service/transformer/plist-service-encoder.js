"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PlistServiceEncoder = void 0;
require("source-map-support/register");
var _stream = _interopRequireDefault(require("stream"));
var _support = require("@appium/support");
const HEADER_LENGTH = 4;
class PlistServiceEncoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }
  _transform(data, encoding, onData) {
    this.push(this._encode(data), 'buffer');
    onData();
  }
  _encode(data) {
    let payloadBuffer = _support.plist.createBinaryPlist(data);
    const headerBuffer = Buffer.alloc(HEADER_LENGTH);
    headerBuffer.writeUInt32BE(payloadBuffer.length, 0);
    return Buffer.concat([headerBuffer, payloadBuffer], headerBuffer.length + payloadBuffer.length);
  }
}
exports.PlistServiceEncoder = PlistServiceEncoder;
var _default = PlistServiceEncoder;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIRUFERVJfTEVOR1RIIiwiUGxpc3RTZXJ2aWNlRW5jb2RlciIsIlN0cmVhbSIsIlRyYW5zZm9ybSIsImNvbnN0cnVjdG9yIiwib2JqZWN0TW9kZSIsIl90cmFuc2Zvcm0iLCJkYXRhIiwiZW5jb2RpbmciLCJvbkRhdGEiLCJwdXNoIiwiX2VuY29kZSIsInBheWxvYWRCdWZmZXIiLCJwbGlzdCIsImNyZWF0ZUJpbmFyeVBsaXN0IiwiaGVhZGVyQnVmZmVyIiwiQnVmZmVyIiwiYWxsb2MiLCJ3cml0ZVVJbnQzMkJFIiwibGVuZ3RoIiwiY29uY2F0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3BsaXN0LXNlcnZpY2UvdHJhbnNmb3JtZXIvcGxpc3Qtc2VydmljZS1lbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7IHBsaXN0IH0gZnJvbSAnQGFwcGl1bS9zdXBwb3J0JztcblxuXG5jb25zdCBIRUFERVJfTEVOR1RIID0gNDtcblxuY2xhc3MgUGxpc3RTZXJ2aWNlRW5jb2RlciBleHRlbmRzIFN0cmVhbS5UcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB9XG5cbiAgX3RyYW5zZm9ybSAoZGF0YSwgZW5jb2RpbmcsIG9uRGF0YSkge1xuICAgIHRoaXMucHVzaCh0aGlzLl9lbmNvZGUoZGF0YSksICdidWZmZXInKTtcbiAgICBvbkRhdGEoKTtcbiAgfVxuXG4gIF9lbmNvZGUgKGRhdGEpIHtcbiAgICBsZXQgcGF5bG9hZEJ1ZmZlciA9IHBsaXN0LmNyZWF0ZUJpbmFyeVBsaXN0KGRhdGEpO1xuICAgIGNvbnN0IGhlYWRlckJ1ZmZlciA9IEJ1ZmZlci5hbGxvYyhIRUFERVJfTEVOR1RIKTtcbiAgICBoZWFkZXJCdWZmZXIud3JpdGVVSW50MzJCRShwYXlsb2FkQnVmZmVyLmxlbmd0aCwgMCk7XG4gICAgcmV0dXJuIEJ1ZmZlci5jb25jYXQoW2hlYWRlckJ1ZmZlciwgcGF5bG9hZEJ1ZmZlcl0sIGhlYWRlckJ1ZmZlci5sZW5ndGggKyBwYXlsb2FkQnVmZmVyLmxlbmd0aCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgUGxpc3RTZXJ2aWNlRW5jb2RlciB9O1xuZXhwb3J0IGRlZmF1bHQgUGxpc3RTZXJ2aWNlRW5jb2RlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBR0EsTUFBTUEsYUFBYSxHQUFHLENBQUM7QUFFdkIsTUFBTUMsbUJBQW1CLFNBQVNDLGVBQU0sQ0FBQ0MsU0FBUyxDQUFDO0VBQ2pEQyxXQUFXLEdBQUk7SUFDYixLQUFLLENBQUM7TUFBRUMsVUFBVSxFQUFFO0lBQUssQ0FBQyxDQUFDO0VBQzdCO0VBRUFDLFVBQVUsQ0FBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRTtJQUNsQyxJQUFJLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0osSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDO0lBQ3ZDRSxNQUFNLEVBQUU7RUFDVjtFQUVBRSxPQUFPLENBQUVKLElBQUksRUFBRTtJQUNiLElBQUlLLGFBQWEsR0FBR0MsY0FBSyxDQUFDQyxpQkFBaUIsQ0FBQ1AsSUFBSSxDQUFDO0lBQ2pELE1BQU1RLFlBQVksR0FBR0MsTUFBTSxDQUFDQyxLQUFLLENBQUNqQixhQUFhLENBQUM7SUFDaERlLFlBQVksQ0FBQ0csYUFBYSxDQUFDTixhQUFhLENBQUNPLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDbkQsT0FBT0gsTUFBTSxDQUFDSSxNQUFNLENBQUMsQ0FBQ0wsWUFBWSxFQUFFSCxhQUFhLENBQUMsRUFBRUcsWUFBWSxDQUFDSSxNQUFNLEdBQUdQLGFBQWEsQ0FBQ08sTUFBTSxDQUFDO0VBQ2pHO0FBQ0Y7QUFBQztBQUFBLGVBR2NsQixtQkFBbUI7QUFBQSJ9