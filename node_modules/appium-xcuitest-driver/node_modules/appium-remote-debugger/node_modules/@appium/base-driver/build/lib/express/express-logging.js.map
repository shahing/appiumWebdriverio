{"version":3,"file":"express-logging.js","names":["compile","fmt","replace","_","name","arg","js","Function","requestEndLoggingFormat","tokens","req","res","status","statusCode","statusStr","red","yellow","cyan","green","fn","white","grey","endLogFormatter","morgan","log","info","jsonResp","requestStartLoggingFormat","startLogFormatter","reqBody","body","truncate","isString","JSON","stringify","length","MAX_LOG_BODY_LENGTH","ign","immediate"],"sources":["../../../lib/express/express-logging.js"],"sourcesContent":["import _ from 'lodash';\nimport '@colors/colors';\nimport morgan from 'morgan';\nimport log from './logger';\nimport {MAX_LOG_BODY_LENGTH} from '../constants';\n\n// Copied the morgan compile function over so that cooler formats\n// may be configured\nfunction compile(fmt) {\n  // escape quotes\n  fmt = fmt.replace(/\"/g, '\\\\\"');\n  fmt = fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function replace(_, name, arg) {\n    return `\"\\n    + (tokens[\"${name}\"](req, res, \"${arg}\") || \"-\") + \"`;\n  });\n  let js = `  return \"${fmt}\";`;\n  return new Function('tokens, req, res', js);\n}\n\nfunction requestEndLoggingFormat(tokens, req, res) {\n  let status = res.statusCode;\n  let statusStr = ':status';\n  if (status >= 500) {\n    statusStr = statusStr.red;\n  } else if (status >= 400) {\n    statusStr = statusStr.yellow;\n  } else if (status >= 300) {\n    statusStr = statusStr.cyan;\n  } else {\n    statusStr = statusStr.green;\n  }\n  let fn = compile(\n    `${'<-- :method :url '.white}${statusStr} ${':response-time ms - :res[content-length]'.grey}`\n  );\n  return fn(tokens, req, res);\n}\n\nconst endLogFormatter = morgan((tokens, req, res) => {\n  log.info(requestEndLoggingFormat(tokens, req, res), (res.jsonResp || '').grey);\n});\n\nconst requestStartLoggingFormat = compile(`${'-->'.white} ${':method'.white} ${':url'.white}`);\n\nconst startLogFormatter = morgan(\n  (tokens, req, res) => {\n    // morgan output is redirected straight to winston\n    let reqBody = '';\n    if (req.body) {\n      try {\n        reqBody = _.truncate(_.isString(req.body) ? req.body : JSON.stringify(req.body), {\n          length: MAX_LOG_BODY_LENGTH,\n        });\n      } catch (ign) {}\n    }\n    log.info(requestStartLoggingFormat(tokens, req, res), reqBody.grey);\n  },\n  {immediate: true}\n);\n\nexport {endLogFormatter, startLogFormatter};\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAIA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAEpBA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,gCAAZ,EAA8C,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;IACjF,OAAQ,qBAAoBD,IAAK,iBAAgBC,GAAI,gBAArD;EACD,CAFK,CAAN;EAGA,IAAIC,EAAE,GAAI,aAAYL,GAAI,IAA1B;EACA,OAAO,IAAIM,QAAJ,CAAa,kBAAb,EAAiCD,EAAjC,CAAP;AACD;;AAED,SAASE,uBAAT,CAAiCC,MAAjC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmD;EACjD,IAAIC,MAAM,GAAGD,GAAG,CAACE,UAAjB;EACA,IAAIC,SAAS,GAAG,SAAhB;;EACA,IAAIF,MAAM,IAAI,GAAd,EAAmB;IACjBE,SAAS,GAAGA,SAAS,CAACC,GAAtB;EACD,CAFD,MAEO,IAAIH,MAAM,IAAI,GAAd,EAAmB;IACxBE,SAAS,GAAGA,SAAS,CAACE,MAAtB;EACD,CAFM,MAEA,IAAIJ,MAAM,IAAI,GAAd,EAAmB;IACxBE,SAAS,GAAGA,SAAS,CAACG,IAAtB;EACD,CAFM,MAEA;IACLH,SAAS,GAAGA,SAAS,CAACI,KAAtB;EACD;;EACD,IAAIC,EAAE,GAAGnB,OAAO,CACb,GAAE,oBAAoBoB,KAAM,GAAEN,SAAU,IAAG,2CAA2CO,IAAK,EAD9E,CAAhB;EAGA,OAAOF,EAAE,CAACV,MAAD,EAASC,GAAT,EAAcC,GAAd,CAAT;AACD;;AAED,MAAMW,eAAe,GAAG,IAAAC,eAAA,EAAO,CAACd,MAAD,EAASC,GAAT,EAAcC,GAAd,KAAsB;EACnDa,eAAA,CAAIC,IAAJ,CAASjB,uBAAuB,CAACC,MAAD,EAASC,GAAT,EAAcC,GAAd,CAAhC,EAAoD,CAACA,GAAG,CAACe,QAAJ,IAAgB,EAAjB,EAAqBL,IAAzE;AACD,CAFuB,CAAxB;;AAIA,MAAMM,yBAAyB,GAAG3B,OAAO,CAAE,GAAE,MAAMoB,KAAM,IAAG,UAAUA,KAAM,IAAG,OAAOA,KAAM,EAAnD,CAAzC;AAEA,MAAMQ,iBAAiB,GAAG,IAAAL,eAAA,EACxB,CAACd,MAAD,EAASC,GAAT,EAAcC,GAAd,KAAsB;EAEpB,IAAIkB,OAAO,GAAG,EAAd;;EACA,IAAInB,GAAG,CAACoB,IAAR,EAAc;IACZ,IAAI;MACFD,OAAO,GAAG1B,eAAA,CAAE4B,QAAF,CAAW5B,eAAA,CAAE6B,QAAF,CAAWtB,GAAG,CAACoB,IAAf,IAAuBpB,GAAG,CAACoB,IAA3B,GAAkCG,IAAI,CAACC,SAAL,CAAexB,GAAG,CAACoB,IAAnB,CAA7C,EAAuE;QAC/EK,MAAM,EAAEC;MADuE,CAAvE,CAAV;IAGD,CAJD,CAIE,OAAOC,GAAP,EAAY,CAAE;EACjB;;EACDb,eAAA,CAAIC,IAAJ,CAASE,yBAAyB,CAAClB,MAAD,EAASC,GAAT,EAAcC,GAAd,CAAlC,EAAsDkB,OAAO,CAACR,IAA9D;AACD,CAZuB,EAaxB;EAACiB,SAAS,EAAE;AAAZ,CAbwB,CAA1B"}