{"version":3,"file":"calendar.js","names":["Calendar","constructor","xcodeVersion","sharedResourcesDir","tccDb","TCCDB","getCalendarRowCount","bundleID","count","execQuery","parseInt","split","hasCalendarAccess","enableCalendarAccess","query","columnCount","_","isNumber","stdout","trim","filter","record","isEmpty","length","err","major","log","warn","message","range","join","disableCalendarAccess"],"sources":["../../lib/calendar.js"],"sourcesContent":["import _ from 'lodash';\nimport log from './logger';\nimport TCCDB from './tcc-db';\n\n\nclass Calendar {\n\n  constructor (xcodeVersion, sharedResourcesDir) {\n    this.xcodeVersion = xcodeVersion;\n    this.tccDb = new TCCDB(xcodeVersion, sharedResourcesDir);\n  }\n\n  async getCalendarRowCount (bundleID) {\n    const count = await this.tccDb.execQuery(`SELECT count(*) FROM access WHERE client='?' AND service='kTCCServiceCalendar';`, bundleID);\n    return parseInt(count.split('=')[1], 10);\n  }\n\n  async hasCalendarAccess (bundleID) {\n    const count = await this.tccDb.execQuery(`SELECT count(*) FROM access WHERE client='?' AND allowed=1 AND service='kTCCServiceCalendar';`, bundleID);\n    return parseInt(count.split('=')[1], 10) > 0;\n  }\n\n  async enableCalendarAccess (bundleID) {\n    let query;\n    if ((await this.getCalendarRowCount(bundleID)) > 0) {\n      query = `UPDATE 'access' SET\n        service='kTCCServiceCalendar',\n        client_type=0,\n        allowed=1,\n        prompt_count=1,\n        csreq=0\n      WHERE client='?' AND service='kTCCServiceCalendar'`;\n    } else {\n      let count = this.columnCount;\n      if (!_.isNumber(this.columnCount)) {\n        try {\n          const stdout = await this.tccDb.execQuery(`pragma table_info('access')`);\n          // stdout has a number of records, each starting with `cid`\n          //       cid = 0\n          //       name = service\n          //       type = TEXT\n          //       notnull = 1\n          //       dflt_value =\n          //       pk = 1\n          //\n          //       cid = 1\n          //       name = client\n          //       type = TEXT\n          //       notnull = 1\n          //       dflt_value =\n          //       pk = 2\n          count = this.columnCount =\n            stdout\n              .trim()\n              // get each record's beginning\n              .split('cid')\n              // remove the empty row (usually, the first)\n              .filter((record) => !_.isEmpty(record))\n              .length;\n        } catch (err) {\n          // use defaults, but do not save\n          count = this.xcodeVersion.major < 10 ? 7 : 11;\n          log.warn(`Unable to find Calendar access column count: ${err.message}`);\n        }\n      }\n\n      // fill in the query with 0's for columns after the 5 we care about\n      query = `INSERT INTO 'access' VALUES ('kTCCServiceCalendar', '?', 0, 1, 1, ${_.range(0, count - 5, 0).join(', ')});`;\n    }\n    await this.tccDb.execQuery(query, bundleID);\n  }\n\n  async disableCalendarAccess (bundleID) {\n    if ((await this.getCalendarRowCount(bundleID)) > 0) {\n      await this.tccDb.execQuery(`DELETE FROM 'access' WHERE client='?' AND service='kTCCServiceCalendar'`, bundleID);\n    }\n  }\n}\n\nexport default Calendar;"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAGA,MAAMA,QAAQ,CAAC;EAEbC,WAAW,CAAEC,YAAY,EAAEC,kBAAkB,EAAE;IAC7C,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,KAAK,GAAG,IAAIC,cAAK,CAACH,YAAY,EAAEC,kBAAkB,CAAC;EAC1D;EAEA,MAAMG,mBAAmB,CAAEC,QAAQ,EAAE;IACnC,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACJ,KAAK,CAACK,SAAS,CAAE,iFAAgF,EAAEF,QAAQ,CAAC;IACrI,OAAOG,QAAQ,CAACF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC1C;EAEA,MAAMC,iBAAiB,CAAEL,QAAQ,EAAE;IACjC,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACJ,KAAK,CAACK,SAAS,CAAE,+FAA8F,EAAEF,QAAQ,CAAC;IACnJ,OAAOG,QAAQ,CAACF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EAC9C;EAEA,MAAME,oBAAoB,CAAEN,QAAQ,EAAE;IACpC,IAAIO,KAAK;IACT,IAAI,CAAC,MAAM,IAAI,CAACR,mBAAmB,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;MAClDO,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA,yDAAyD;IACrD,CAAC,MAAM;MACL,IAAIN,KAAK,GAAG,IAAI,CAACO,WAAW;MAC5B,IAAI,CAACC,eAAC,CAACC,QAAQ,CAAC,IAAI,CAACF,WAAW,CAAC,EAAE;QACjC,IAAI;UACF,MAAMG,MAAM,GAAG,MAAM,IAAI,CAACd,KAAK,CAACK,SAAS,CAAE,6BAA4B,CAAC;UAexED,KAAK,GAAG,IAAI,CAACO,WAAW,GACtBG,MAAM,CACHC,IAAI,EAAE,CAENR,KAAK,CAAC,KAAK,CAAC,CAEZS,MAAM,CAAEC,MAAM,IAAK,CAACL,eAAC,CAACM,OAAO,CAACD,MAAM,CAAC,CAAC,CACtCE,MAAM;QACb,CAAC,CAAC,OAAOC,GAAG,EAAE;UAEZhB,KAAK,GAAG,IAAI,CAACN,YAAY,CAACuB,KAAK,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE;UAC7CC,eAAG,CAACC,IAAI,CAAE,gDAA+CH,GAAG,CAACI,OAAQ,EAAC,CAAC;QACzE;MACF;MAGAd,KAAK,GAAI,qEAAoEE,eAAC,CAACa,KAAK,CAAC,CAAC,EAAErB,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACsB,IAAI,CAAC,IAAI,CAAE,IAAG;IACtH;IACA,MAAM,IAAI,CAAC1B,KAAK,CAACK,SAAS,CAACK,KAAK,EAAEP,QAAQ,CAAC;EAC7C;EAEA,MAAMwB,qBAAqB,CAAExB,QAAQ,EAAE;IACrC,IAAI,CAAC,MAAM,IAAI,CAACD,mBAAmB,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;MAClD,MAAM,IAAI,CAACH,KAAK,CAACK,SAAS,CAAE,yEAAwE,EAAEF,QAAQ,CAAC;IACjH;EACF;AACF;AAAC,eAEcP,QAAQ;AAAA"}