{"version":3,"file":"prepare-apps.js","names":["extensions","prepareSafari","tmpDir","platformVersion","prepareBuiltInApp","appName","log","debug","newAppPath","path","resolve","stat","appPath","getBuiltInApp","err","fs","isDirectory","warn","Error","moveBuiltInApp","appDir","getAppDir","message","indexOf","errorAndThrow"],"sources":["../../../lib/extensions/prepare-apps.js"],"sourcesContent":["import { fs } from '@appium/support';\nimport log from '../logger';\nimport path from 'path';\n\n\nlet extensions = {};\n\nextensions.prepareSafari = async function prepareSafari (tmpDir, platformVersion) {\n  await this.prepareBuiltInApp('MobileSafari', tmpDir, platformVersion);\n};\n\nextensions.prepareBuiltInApp = async function prepareBuiltInApp (appName, tmpDir, platformVersion) {\n  log.debug(`Looking for built in app '${appName}'`);\n  let newAppPath = path.resolve(tmpDir, `Appium-${appName}-${platformVersion}.app`);\n\n  let stat, appPath;\n  try {\n    [stat, appPath] = await this.getBuiltInApp(appName);\n  } catch (err) {\n    try {\n      stat = await fs.stat(newAppPath);\n      if (stat.isDirectory()) {\n        log.debug('Could not find original app, but found the temp ' +\n                     'Appium one so using that: ${}');\n        return [newAppPath, appPath];\n      }\n    } catch (err) {\n      log.warn(`App is also not at '${newAppPath}'`);\n      throw new Error(`Could not find built in app '${appName}' in its home ` +\n                      `or temp dir!`);\n    }\n  }\n\n  if (!stat.isDirectory()) {\n    throw new Error(`App found but it is not a directory: '${appPath}'`);\n  }\n\n  log.debug(`Found app, trying to move '${appPath}' to tmp dir '${tmpDir}'`);\n  await this.moveBuiltInApp(appName, appPath, newAppPath);\n};\n\nextensions.getBuiltInApp = async function getBuiltInApp (appName) {\n  let appDir = await this.getAppDir(appName);\n  let appPath = path.resolve(appDir, `${appName}.app`);\n  log.debug(`Found path for '${appName}': ${appPath}`);\n  try {\n    let stat = await fs.stat(appPath);\n    return [stat, appPath];\n  } catch (err) {\n    if (err && err.message.indexOf('ENOENT') !== -1) {\n      log.errorAndThrow(`App '${appName}' is not at '${appPath}'`);\n    }\n  }\n};\n\n\nexport default extensions;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAGA,IAAIA,UAAU,GAAG,CAAC,CAAC;AAEnBA,UAAU,CAACC,aAAa,GAAG,eAAeA,aAAa,CAAEC,MAAM,EAAEC,eAAe,EAAE;EAChF,MAAM,IAAI,CAACC,iBAAiB,CAAC,cAAc,EAAEF,MAAM,EAAEC,eAAe,CAAC;AACvE,CAAC;AAEDH,UAAU,CAACI,iBAAiB,GAAG,eAAeA,iBAAiB,CAAEC,OAAO,EAAEH,MAAM,EAAEC,eAAe,EAAE;EACjGG,eAAG,CAACC,KAAK,CAAE,6BAA4BF,OAAQ,GAAE,CAAC;EAClD,IAAIG,UAAU,GAAGC,aAAI,CAACC,OAAO,CAACR,MAAM,EAAG,UAASG,OAAQ,IAAGF,eAAgB,MAAK,CAAC;EAEjF,IAAIQ,IAAI,EAAEC,OAAO;EACjB,IAAI;IACF,CAACD,IAAI,EAAEC,OAAO,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACR,OAAO,CAAC;EACrD,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZ,IAAI;MACFH,IAAI,GAAG,MAAMI,WAAE,CAACJ,IAAI,CAACH,UAAU,CAAC;MAChC,IAAIG,IAAI,CAACK,WAAW,EAAE,EAAE;QACtBV,eAAG,CAACC,KAAK,CAAC,kDAAkD,GAC/C,+BAA+B,CAAC;QAC7C,OAAO,CAACC,UAAU,EAAEI,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZR,eAAG,CAACW,IAAI,CAAE,uBAAsBT,UAAW,GAAE,CAAC;MAC9C,MAAM,IAAIU,KAAK,CAAE,gCAA+Bb,OAAQ,gBAAe,GACtD,cAAa,CAAC;IACjC;EACF;EAEA,IAAI,CAACM,IAAI,CAACK,WAAW,EAAE,EAAE;IACvB,MAAM,IAAIE,KAAK,CAAE,yCAAwCN,OAAQ,GAAE,CAAC;EACtE;EAEAN,eAAG,CAACC,KAAK,CAAE,8BAA6BK,OAAQ,iBAAgBV,MAAO,GAAE,CAAC;EAC1E,MAAM,IAAI,CAACiB,cAAc,CAACd,OAAO,EAAEO,OAAO,EAAEJ,UAAU,CAAC;AACzD,CAAC;AAEDR,UAAU,CAACa,aAAa,GAAG,eAAeA,aAAa,CAAER,OAAO,EAAE;EAChE,IAAIe,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAChB,OAAO,CAAC;EAC1C,IAAIO,OAAO,GAAGH,aAAI,CAACC,OAAO,CAACU,MAAM,EAAG,GAAEf,OAAQ,MAAK,CAAC;EACpDC,eAAG,CAACC,KAAK,CAAE,mBAAkBF,OAAQ,MAAKO,OAAQ,EAAC,CAAC;EACpD,IAAI;IACF,IAAID,IAAI,GAAG,MAAMI,WAAE,CAACJ,IAAI,CAACC,OAAO,CAAC;IACjC,OAAO,CAACD,IAAI,EAAEC,OAAO,CAAC;EACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,IAAIA,GAAG,IAAIA,GAAG,CAACQ,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MAC/CjB,eAAG,CAACkB,aAAa,CAAE,QAAOnB,OAAQ,gBAAeO,OAAQ,GAAE,CAAC;IAC9D;EACF;AACF,CAAC;AAAC,eAGaZ,UAAU;AAAA"}