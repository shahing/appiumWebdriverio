{"version":3,"file":"npm.js","names":["CACHE_DIR_RELATIVE_PATH","path","join","INSTALL_LOCKFILE_RELATIVE_PATH","NPM","_getInstallLockfilePath","cwd","exec","cmd","args","opts","execOpts","json","lockFile","teenProcessExecOpts","unshift","push","npmCmd","system","isWindows","runner","acquireLock","util","getLockFileGuard","_runner","ret","stdout","stderr","code","JSON","parse","ign","e","err","Error","trim","getLatestVersion","pkg","latest","message","includes","getLatestSafeUpgradeVersion","curVersion","allVersions","getLatestSafeUpgradeFromVersions","list","safeUpgradeVer","curSemver","semver","testVer","testSemver","prerelease","length","compare","major","format","installPackage","pkgName","pkgVer","dummyPkgJson","dummyPkgPath","fs","readFile","writeFile","stringify","installOpts","hasAppiumDependency","process","env","APPIUM_OMIT_PEER_DEPS","res","error","pkgJsonPath","resolveFrom","require","uninstallPackage","npm"],"sources":["../../lib/npm.js"],"sourcesContent":["// @ts-check\n\nimport path from 'path';\nimport semver from 'semver';\nimport {hasAppiumDependency} from './env';\nimport {exec} from 'teen_process';\nimport {fs} from './fs';\nimport * as util from './util';\nimport * as system from './system';\nimport resolveFrom from 'resolve-from';\n\n/**\n * Relative path to directory containing any Appium internal files\n * XXX: this is duplicated in `appium/lib/constants.js`.\n */\nexport const CACHE_DIR_RELATIVE_PATH = path.join('node_modules', '.cache', 'appium');\n\n/**\n * Relative path to lockfile used when installing an extension via `appium`\n */\nexport const INSTALL_LOCKFILE_RELATIVE_PATH = path.join(CACHE_DIR_RELATIVE_PATH, '.install.lock');\n\n/**\n * XXX: This should probably be a singleton, but it isn't.  Maybe this module should just export functions?\n */\nexport class NPM {\n  /**\n   * Returns path to \"install\" lockfile\n   * @private\n   * @param {string} cwd\n   */\n  _getInstallLockfilePath(cwd) {\n    return path.join(cwd, INSTALL_LOCKFILE_RELATIVE_PATH);\n  }\n\n  /**\n   * Execute `npm` with given args.\n   *\n   * If the process exits with a nonzero code, the contents of `STDOUT` and `STDERR` will be in the\n   * `message` of any rejected error.\n   * @param {string} cmd\n   * @param {string[]} args\n   * @param {ExecOpts} opts\n   * @param {Omit<import('teen_process').ExecOptions, 'cwd'>} [execOpts]\n   */\n  async exec(cmd, args, opts, execOpts = {}) {\n    let {cwd, json, lockFile} = opts;\n\n    // make sure we perform the current operation in cwd\n    /** @type {import('teen_process').ExecOptions} */\n    const teenProcessExecOpts = {...execOpts, cwd};\n\n    args.unshift(cmd);\n    if (json) {\n      args.push('--json');\n    }\n    const npmCmd = system.isWindows() ? 'npm.cmd' : 'npm';\n    let runner = async () => await exec(npmCmd, args, teenProcessExecOpts);\n    if (lockFile) {\n      const acquireLock = util.getLockFileGuard(lockFile);\n      const _runner = runner;\n      runner = async () => await acquireLock(_runner);\n    }\n\n    /** @type {import('teen_process').ExecResult<string> & {json?: any}} */\n    let ret;\n    try {\n      const {stdout, stderr, code} = await runner();\n      ret = {stdout, stderr, code};\n      // if possible, parse NPM's json output. During NPM install 3rd-party\n      // packages can write to stdout, so sometimes the json output can't be\n      // guaranteed to be parseable\n      try {\n        ret.json = JSON.parse(stdout);\n      } catch (ign) {}\n    } catch (e) {\n      const {\n        stdout = '',\n        stderr = '',\n        code = null,\n      } = /** @type {import('teen_process').ExecError} */ (e);\n      const err = new Error(\n        `npm command '${args.join(\n          ' '\n        )}' failed with code ${code}.\\n\\nSTDOUT:\\n${stdout.trim()}\\n\\nSTDERR:\\n${stderr.trim()}`\n      );\n      throw err;\n    }\n    return ret;\n  }\n\n  /**\n   * @param {string} cwd\n   * @param {string} pkg\n   * @returns {Promise<string?>}\n   */\n  async getLatestVersion(cwd, pkg) {\n    try {\n      return (\n        (\n          await this.exec('view', [pkg, 'dist-tags'], {\n            json: true,\n            cwd,\n          })\n        ).json?.latest ?? null\n      );\n    } catch (err) {\n      if (!err?.message.includes('E404')) {\n        throw err;\n      }\n      return null;\n    }\n  }\n\n  /**\n   * @param {string} cwd\n   * @param {string} pkg\n   * @param {string} curVersion\n   * @returns {Promise<string?>}\n   */\n  async getLatestSafeUpgradeVersion(cwd, pkg, curVersion) {\n    try {\n      const allVersions = (\n        await this.exec('view', [pkg, 'versions'], {\n          json: true,\n          cwd,\n        })\n      ).json;\n      return this.getLatestSafeUpgradeFromVersions(curVersion, allVersions);\n    } catch (err) {\n      if (!err?.message.includes('E404')) {\n        throw err;\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Runs `npm ls`, optionally for a particular package.\n   * @param {string} cwd\n   * @param {string} [pkg]\n   */\n  async list(cwd, pkg) {\n    return (await this.exec('list', pkg ? [pkg] : [], {cwd, json: true})).json;\n  }\n\n  /**\n   * Given a current version and a list of all versions for a package, return the version which is\n   * the highest safely-upgradable version (meaning not crossing any major revision boundaries, and\n   * not including any alpha/beta/rc versions)\n   *\n   * @param {string} curVersion - the current version of a package\n   * @param {Array<string>} allVersions - a list of version strings\n   *\n   * @return {string|null} - the highest safely-upgradable version, or null if there isn't one\n   */\n  getLatestSafeUpgradeFromVersions(curVersion, allVersions) {\n    let safeUpgradeVer = null;\n    const curSemver = semver.parse(curVersion);\n    if (curSemver === null) {\n      throw new Error(`Could not parse current version '${curVersion}'`);\n    }\n    for (const testVer of allVersions) {\n      const testSemver = semver.parse(testVer);\n      if (testSemver === null) {\n        throw new Error(`Could not parse version to test against: '${testVer}'`);\n      }\n      // if the test version is a prerelease, ignore it\n      if (testSemver.prerelease.length > 0) {\n        continue;\n      }\n      // if the current version is later than the test version, skip this test version\n      if (curSemver.compare(testSemver) === 1) {\n        continue;\n      }\n      // if the test version is newer, but crosses a major revision boundary, also skip it\n      if (testSemver.major > curSemver.major) {\n        continue;\n      }\n      // otherwise this version is safe to upgrade to. But there might be multiple ones of this\n      // kind, so keep iterating and keeping the highest\n      if (safeUpgradeVer === null || testSemver.compare(safeUpgradeVer) === 1) {\n        safeUpgradeVer = testSemver;\n      }\n    }\n    if (safeUpgradeVer) {\n      safeUpgradeVer = safeUpgradeVer.format();\n    }\n    return safeUpgradeVer;\n  }\n\n  /**\n   * Installs a package w/ `npm`\n   * @param {string} cwd\n   * @param {string} pkgName\n   * @param {InstallPackageOpts} [opts]\n   * @returns {Promise<import('type-fest').PackageJson>}\n   */\n  async installPackage(cwd, pkgName, {pkgVer} = {}) {\n    /** @type {any} */\n    let dummyPkgJson;\n    const dummyPkgPath = path.join(cwd, 'package.json');\n    try {\n      dummyPkgJson = JSON.parse(await fs.readFile(dummyPkgPath, 'utf8'));\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        dummyPkgJson = {};\n        await fs.writeFile(dummyPkgPath, JSON.stringify(dummyPkgJson, null, 2), 'utf8');\n      } else {\n        throw err;\n      }\n    }\n\n    const installOpts = ['--save-dev'];\n    if (!(await hasAppiumDependency(cwd))) {\n      if (process.env.APPIUM_OMIT_PEER_DEPS) {\n        installOpts.push('--omit=peer');\n      }\n      installOpts.push('--save-exact', '--global-style', '--no-package-lock');\n    }\n\n    const res = await this.exec(\n      'install',\n      [...installOpts, pkgVer ? `${pkgName}@${pkgVer}` : pkgName],\n      {\n        cwd,\n        json: true,\n        lockFile: this._getInstallLockfilePath(cwd),\n      }\n    );\n\n    if (res.json) {\n      // we parsed a valid json response, so if we got an error here, return that\n      // message straightaway\n      if (res.json.error) {\n        throw new Error(res.json.error);\n      }\n    }\n\n    // Now read package data from the installed package to return, and make sure\n    // everything got installed ok. Remember, pkgName might end up with a / in it due to an npm\n    // org, so if so, that will get correctly exploded into multiple directories, by path.resolve here\n    // (even on Windows!)\n    const pkgJsonPath = resolveFrom(cwd, `${pkgName}/package.json`);\n    try {\n      return require(pkgJsonPath);\n    } catch {\n      throw new Error(\n        'The package was not downloaded correctly; its package.json ' +\n          'did not exist or was unreadable. We looked for it at ' +\n          pkgJsonPath\n      );\n    }\n  }\n\n  /**\n   * @param {string} cwd\n   * @param {string} pkg\n   */\n  async uninstallPackage(cwd, pkg) {\n    await this.exec('uninstall', [pkg], {\n      cwd,\n      lockFile: this._getInstallLockfilePath(cwd),\n    });\n  }\n}\n\nexport const npm = new NPM();\n\n/**\n * Options for {@link NPM.installPackage}\n * @typedef InstallPackageOpts\n * @property {string} [pkgVer] - the version of the package to install\n */\n\n/**\n * Options for {@link NPM.exec}\n * @typedef ExecOpts\n * @property {string} cwd - Current working directory\n * @property {boolean} [json] - If `true`, supply `--json` flag to npm and resolve w/ parsed JSON\n * @property {string} [lockFile] - Path to lockfile to use\n */\n"],"mappings":"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"}