{"version":3,"file":"event.js","names":["EventMixin","Base","EventCommands","logCustomEvent","vendor","event","logEvent","getLogEvents","type","_","isEmpty","eventHistory","typeList","castArray","reduce","acc","eventTimes","eventType","includes"],"sources":["../../../../lib/basedriver/commands/event.js"],"sourcesContent":["/* eslint-disable require-await */\n// @ts-check\nimport _ from 'lodash';\n\n/**\n * @param {TimeoutBase} Base\n * @returns {EventBase}\n */\nexport function EventMixin(Base) {\n  /**\n   * @implements {IEventCommands}\n   */\n  class EventCommands extends Base {\n    /**\n     * Log a user-defined event in the event log.\n     *\n     * @param {string} vendor - a vendor prefix for the user, to ensure namespace\n     * separation\n     * @param {string} event - the event name\n     */\n    async logCustomEvent(vendor, event) {\n      this.logEvent(`${vendor}:${event}`);\n    }\n\n    /**\n     * Get the event log\n     * @param {string|string[]} [type] - the event type to filter with.\n     * It returns all events if the type is not provided or empty string/array.\n     * @returns {Promise<import('@appium/types').EventHistory|Record<string,number>>} - the event history log object\n     */\n    async getLogEvents(type) {\n      if (_.isEmpty(type)) {\n        return this.eventHistory;\n      }\n\n      const typeList = _.castArray(type);\n\n      return _.reduce(\n        this.eventHistory,\n        (acc, eventTimes, eventType) => {\n          if (typeList.includes(eventType)) {\n            acc[eventType] = eventTimes;\n          }\n          return acc;\n        },\n        {}\n      );\n    }\n  }\n\n  return EventCommands;\n}\n\n/**\n * @typedef {import('@appium/types').EventCommands} IEventCommands\n * @typedef {import('./timeout').TimeoutBase} TimeoutBase\n * @typedef {import('../driver').BaseDriverBase<import('@appium/types').TimeoutCommands & IEventCommands>} EventBase\n */\n"],"mappings":";;;;;;;;;AAEA;;;;AAMO,SAASA,UAAT,CAAoBC,IAApB,EAA0B;EAI/B,MAAMC,aAAN,SAA4BD,IAA5B,CAAiC;IAQX,MAAdE,cAAc,CAACC,MAAD,EAASC,KAAT,EAAgB;MAClC,KAAKC,QAAL,CAAe,GAAEF,MAAO,IAAGC,KAAM,EAAjC;IACD;;IAQiB,MAAZE,YAAY,CAACC,IAAD,EAAO;MACvB,IAAIC,eAAA,CAAEC,OAAF,CAAUF,IAAV,CAAJ,EAAqB;QACnB,OAAO,KAAKG,YAAZ;MACD;;MAED,MAAMC,QAAQ,GAAGH,eAAA,CAAEI,SAAF,CAAYL,IAAZ,CAAjB;;MAEA,OAAOC,eAAA,CAAEK,MAAF,CACL,KAAKH,YADA,EAEL,CAACI,GAAD,EAAMC,UAAN,EAAkBC,SAAlB,KAAgC;QAC9B,IAAIL,QAAQ,CAACM,QAAT,CAAkBD,SAAlB,CAAJ,EAAkC;UAChCF,GAAG,CAACE,SAAD,CAAH,GAAiBD,UAAjB;QACD;;QACD,OAAOD,GAAP;MACD,CAPI,EAQL,EARK,CAAP;IAUD;;EAnC8B;;EAsCjC,OAAOb,aAAP;AACD"}