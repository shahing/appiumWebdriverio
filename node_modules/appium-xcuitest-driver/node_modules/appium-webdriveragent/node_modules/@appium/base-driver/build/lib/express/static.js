"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.STATIC_DIR = void 0;
exports.guineaPig = guineaPig;
exports.guineaPigAppBanner = guineaPigAppBanner;
exports.guineaPigScrollable = guineaPigScrollable;
exports.welcome = welcome;

require("source-map-support/register");

var _path = _interopRequireDefault(require("path"));

var _logger = _interopRequireDefault(require("./logger"));

var _lodash = _interopRequireDefault(require("lodash"));

var _support = require("@appium/support");

var _bluebird = _interopRequireDefault(require("bluebird"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let STATIC_DIR = _path.default.resolve(__dirname, '..', '..', '..', 'static');

exports.STATIC_DIR = STATIC_DIR;

if (_lodash.default.isNull(_path.default.resolve(__dirname).match(/build[/\\]lib[/\\]express$/))) {
  exports.STATIC_DIR = STATIC_DIR = _path.default.resolve(__dirname, '..', '..', 'static');
}

async function guineaPigTemplate(req, res, page) {
  const delay = parseInt(req.params.delay || req.query.delay || 0, 10);
  const throwError = req.params.throwError || req.query.throwError || '';
  let params = {
    throwError,
    serverTime: new Date(),
    userAgent: req.headers['user-agent'],
    comment: 'None'
  };

  if (req.method === 'POST') {
    params.comment = req.body.comments || params.comment;
  }

  _logger.default.debug(`Sending guinea pig response with params: ${JSON.stringify(params)}`);

  if (delay) {
    _logger.default.debug(`Waiting ${delay}ms before responding`);

    await _bluebird.default.delay(delay);
  }

  res.set('content-type', 'text/html');
  res.cookie('guineacookie1', 'i am a cookie value', {
    path: '/'
  });
  res.cookie('guineacookie2', 'cooki√©2', {
    path: '/'
  });
  res.cookie('guineacookie3', 'cant access this', {
    domain: '.blargimarg.com',
    path: '/'
  });
  res.send((await getTemplate(page))(params));
}

async function guineaPig(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig.html');
}

async function guineaPigScrollable(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig-scrollable.html');
}

async function guineaPigAppBanner(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig-app-banner.html');
}

async function welcome(req, res) {
  let params = {
    message: "Let's browse!"
  };

  _logger.default.debug(`Sending welcome response with params: ${JSON.stringify(params)}`);

  res.send((await getTemplate('welcome.html'))(params));
}

async function getTemplate(templateName) {
  let content = await _support.fs.readFile(_path.default.resolve(STATIC_DIR, 'test', templateName));
  return _lodash.default.template(content.toString());
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTVEFUSUNfRElSIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJfIiwiaXNOdWxsIiwibWF0Y2giLCJndWluZWFQaWdUZW1wbGF0ZSIsInJlcSIsInJlcyIsInBhZ2UiLCJkZWxheSIsInBhcnNlSW50IiwicGFyYW1zIiwicXVlcnkiLCJ0aHJvd0Vycm9yIiwic2VydmVyVGltZSIsIkRhdGUiLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiY29tbWVudCIsIm1ldGhvZCIsImJvZHkiLCJjb21tZW50cyIsImxvZyIsImRlYnVnIiwiSlNPTiIsInN0cmluZ2lmeSIsIkIiLCJzZXQiLCJjb29raWUiLCJkb21haW4iLCJzZW5kIiwiZ2V0VGVtcGxhdGUiLCJndWluZWFQaWciLCJndWluZWFQaWdTY3JvbGxhYmxlIiwiZ3VpbmVhUGlnQXBwQmFubmVyIiwid2VsY29tZSIsIm1lc3NhZ2UiLCJ0ZW1wbGF0ZU5hbWUiLCJjb250ZW50IiwiZnMiLCJyZWFkRmlsZSIsInRlbXBsYXRlIiwidG9TdHJpbmciXSwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvZXhwcmVzcy9zdGF0aWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQge2ZzfSBmcm9tICdAYXBwaXVtL3N1cHBvcnQnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuXG5sZXQgU1RBVElDX0RJUiA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICcuLicsICdzdGF0aWMnKTtcbmlmIChfLmlzTnVsbChwYXRoLnJlc29sdmUoX19kaXJuYW1lKS5tYXRjaCgvYnVpbGRbL1xcXFxdbGliWy9cXFxcXWV4cHJlc3MkLykpKSB7XG4gIC8vIGluIHNvbWUgY29udGV4dHMgd2UgYXJlIG5vdCBpbiB0aGUgYnVpbGQgZGlyZWN0b3J5LFxuICAvLyBzbyB3ZSBkb24ndCB3YW50IHRvIGdvIGJhY2sgdGhlIGV4dHJhIGxldmVsXG4gIFNUQVRJQ19ESVIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnLi4nLCAnc3RhdGljJyk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZ1RlbXBsYXRlKHJlcSwgcmVzLCBwYWdlKSB7XG4gIGNvbnN0IGRlbGF5ID0gcGFyc2VJbnQocmVxLnBhcmFtcy5kZWxheSB8fCByZXEucXVlcnkuZGVsYXkgfHwgMCwgMTApO1xuICBjb25zdCB0aHJvd0Vycm9yID0gcmVxLnBhcmFtcy50aHJvd0Vycm9yIHx8IHJlcS5xdWVyeS50aHJvd0Vycm9yIHx8ICcnO1xuICBsZXQgcGFyYW1zID0ge1xuICAgIHRocm93RXJyb3IsXG4gICAgc2VydmVyVGltZTogbmV3IERhdGUoKSxcbiAgICB1c2VyQWdlbnQ6IHJlcS5oZWFkZXJzWyd1c2VyLWFnZW50J10sXG4gICAgY29tbWVudDogJ05vbmUnLFxuICB9O1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgcGFyYW1zLmNvbW1lbnQgPSByZXEuYm9keS5jb21tZW50cyB8fCBwYXJhbXMuY29tbWVudDtcbiAgfVxuICBsb2cuZGVidWcoYFNlbmRpbmcgZ3VpbmVhIHBpZyByZXNwb25zZSB3aXRoIHBhcmFtczogJHtKU09OLnN0cmluZ2lmeShwYXJhbXMpfWApO1xuICBpZiAoZGVsYXkpIHtcbiAgICBsb2cuZGVidWcoYFdhaXRpbmcgJHtkZWxheX1tcyBiZWZvcmUgcmVzcG9uZGluZ2ApO1xuICAgIGF3YWl0IEIuZGVsYXkoZGVsYXkpO1xuICB9XG4gIHJlcy5zZXQoJ2NvbnRlbnQtdHlwZScsICd0ZXh0L2h0bWwnKTtcbiAgcmVzLmNvb2tpZSgnZ3VpbmVhY29va2llMScsICdpIGFtIGEgY29va2llIHZhbHVlJywge3BhdGg6ICcvJ30pO1xuICByZXMuY29va2llKCdndWluZWFjb29raWUyJywgJ2Nvb2tpw6kyJywge3BhdGg6ICcvJ30pO1xuICByZXMuY29va2llKCdndWluZWFjb29raWUzJywgJ2NhbnQgYWNjZXNzIHRoaXMnLCB7XG4gICAgZG9tYWluOiAnLmJsYXJnaW1hcmcuY29tJyxcbiAgICBwYXRoOiAnLycsXG4gIH0pO1xuICByZXMuc2VuZCgoYXdhaXQgZ2V0VGVtcGxhdGUocGFnZSkpKHBhcmFtcykpO1xufVxuXG4vKlxuICogRHluYW1pYyBwYWdlIG1hcHBlZCB0byAvdGVzdC9ndWluZWEtcGlnXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZyhyZXEsIHJlcykge1xuICByZXR1cm4gYXdhaXQgZ3VpbmVhUGlnVGVtcGxhdGUocmVxLCByZXMsICdndWluZWEtcGlnLmh0bWwnKTtcbn1cblxuLypcbiAqIER5bmFtaWMgcGFnZSBtYXBwZWQgdG8gL3Rlc3QvZ3VpbmVhLXBpZy1zY3JvbGxhYmxlXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZ1Njcm9sbGFibGUocmVxLCByZXMpIHtcbiAgcmV0dXJuIGF3YWl0IGd1aW5lYVBpZ1RlbXBsYXRlKHJlcSwgcmVzLCAnZ3VpbmVhLXBpZy1zY3JvbGxhYmxlLmh0bWwnKTtcbn1cblxuLypcbiAqIER5bmFtaWMgcGFnZSBtYXBwZWQgdG8gL3Rlc3QvZ3VpbmVhLXBpZy1hcHAtYmFubmVyXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZ0FwcEJhbm5lcihyZXEsIHJlcykge1xuICByZXR1cm4gYXdhaXQgZ3VpbmVhUGlnVGVtcGxhdGUocmVxLCByZXMsICdndWluZWEtcGlnLWFwcC1iYW5uZXIuaHRtbCcpO1xufVxuXG4vKlxuICogRHluYW1pYyBwYWdlIG1hcHBlZCB0byAvd2VsY29tZVxuICovXG5hc3luYyBmdW5jdGlvbiB3ZWxjb21lKHJlcSwgcmVzKSB7XG4gIGxldCBwYXJhbXMgPSB7bWVzc2FnZTogXCJMZXQncyBicm93c2UhXCJ9O1xuICBsb2cuZGVidWcoYFNlbmRpbmcgd2VsY29tZSByZXNwb25zZSB3aXRoIHBhcmFtczogJHtKU09OLnN0cmluZ2lmeShwYXJhbXMpfWApO1xuICByZXMuc2VuZCgoYXdhaXQgZ2V0VGVtcGxhdGUoJ3dlbGNvbWUuaHRtbCcpKShwYXJhbXMpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0VGVtcGxhdGUodGVtcGxhdGVOYW1lKSB7XG4gIGxldCBjb250ZW50ID0gYXdhaXQgZnMucmVhZEZpbGUocGF0aC5yZXNvbHZlKFNUQVRJQ19ESVIsICd0ZXN0JywgdGVtcGxhdGVOYW1lKSk7XG4gIHJldHVybiBfLnRlbXBsYXRlKGNvbnRlbnQudG9TdHJpbmcoKSk7XG59XG5cbmV4cG9ydCB7Z3VpbmVhUGlnLCBndWluZWFQaWdTY3JvbGxhYmxlLCBndWluZWFQaWdBcHBCYW5uZXIsIHdlbGNvbWUsIFNUQVRJQ19ESVJ9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxVQUFVLEdBQUdDLGFBQUEsQ0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DLElBQXBDLEVBQTBDLFFBQTFDLENBQWpCOzs7O0FBQ0EsSUFBSUMsZUFBQSxDQUFFQyxNQUFGLENBQVNKLGFBQUEsQ0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCRyxLQUF4QixDQUE4Qiw0QkFBOUIsQ0FBVCxDQUFKLEVBQTJFO0VBR3pFLHFCQUFBTixVQUFVLEdBQUdDLGFBQUEsQ0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DLFFBQXBDLENBQWI7QUFDRDs7QUFFRCxlQUFlSSxpQkFBZixDQUFpQ0MsR0FBakMsRUFBc0NDLEdBQXRDLEVBQTJDQyxJQUEzQyxFQUFpRDtFQUMvQyxNQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0osR0FBRyxDQUFDSyxNQUFKLENBQVdGLEtBQVgsSUFBb0JILEdBQUcsQ0FBQ00sS0FBSixDQUFVSCxLQUE5QixJQUF1QyxDQUF4QyxFQUEyQyxFQUEzQyxDQUF0QjtFQUNBLE1BQU1JLFVBQVUs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