"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validators = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isNumber(o) {
  return _lodash.default.isNumber(o) || !_lodash.default.isNaN(parseInt(o, 10)) || !_lodash.default.isNaN(parseFloat(o));
}

function msValidator(ms) {
  if (!_lodash.default.isNumber(ms) || ms < 0) {
    throw new Error('Wait ms must be a number equal to 0 or greater');
  }
}

const validators = {
  setUrl: url => {
    if (!url || !url.match(/^([a-zA-Z0-9_+.-]+:\/\/)|(about:)|(data:)/)) {
      throw new Error('Url or Uri must start with <scheme>://');
    }
  },
  implicitWait: ms => {
    msValidator(ms);
  },
  asyncScriptTimeout: ms => {
    msValidator(ms);
  },
  clickCurrent: button => {
    if (!(isNumber(button) || _lodash.default.isUndefined(button)) || button < 0 || button > 2) {
      throw new Error('Click button must be 0, 1, or 2');
    }
  },
  setNetworkConnection: type => {
    if (!isNumber(type) || [0, 1, 2, 4, 6].indexOf(type) === -1) {
      throw new Error('Network type must be one of 0, 1, 2, 4, 6');
    }
  }
};
exports.validators = validators;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc051bWJlciIsIm8iLCJfIiwiaXNOYU4iLCJwYXJzZUludCIsInBhcnNlRmxvYXQiLCJtc1ZhbGlkYXRvciIsIm1zIiwiRXJyb3IiLCJ2YWxpZGF0b3JzIiwic2V0VXJsIiwidXJsIiwibWF0Y2giLCJpbXBsaWNpdFdhaXQiLCJhc3luY1NjcmlwdFRpbWVvdXQiLCJjbGlja0N1cnJlbnQiLCJidXR0b24iLCJpc1VuZGVmaW5lZCIsInNldE5ldHdvcmtDb25uZWN0aW9uIiwidHlwZSIsImluZGV4T2YiXSwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvcHJvdG9jb2wvdmFsaWRhdG9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5mdW5jdGlvbiBpc051bWJlcihvKSB7XG4gIHJldHVybiBfLmlzTnVtYmVyKG8pIHx8ICFfLmlzTmFOKHBhcnNlSW50KG8sIDEwKSkgfHwgIV8uaXNOYU4ocGFyc2VGbG9hdChvKSk7XG59XG5cbmZ1bmN0aW9uIG1zVmFsaWRhdG9yKG1zKSB7XG4gIGlmICghXy5pc051bWJlcihtcykgfHwgbXMgPCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdXYWl0IG1zIG11c3QgYmUgYSBudW1iZXIgZXF1YWwgdG8gMCBvciBncmVhdGVyJyk7XG4gIH1cbn1cblxuY29uc3QgdmFsaWRhdG9ycyA9IHtcbiAgc2V0VXJsOiAodXJsKSA9PiB7XG4gICAgLy8gZWl0aGVyIGFuIGB4eXo6Ly9gLCBgYWJvdXQ6YCwgb3IgYGRhdGE6YCBzY2hlbWUgaXMgYWxsb3dlZFxuICAgIGlmICghdXJsIHx8ICF1cmwubWF0Y2goL14oW2EtekEtWjAtOV8rLi1dKzpcXC9cXC8pfChhYm91dDopfChkYXRhOikvKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVcmwgb3IgVXJpIG11c3Qgc3RhcnQgd2l0aCA8c2NoZW1lPjovLycpO1xuICAgIH1cbiAgfSxcbiAgaW1wbGljaXRXYWl0OiAobXMpID0+IHtcbiAgICBtc1ZhbGlkYXRvcihtcyk7XG4gIH0sXG4gIGFzeW5jU2NyaXB0VGltZW91dDogKG1zKSA9PiB7XG4gICAgbXNWYWxpZGF0b3IobXMpO1xuICB9LFxuICBjbGlja0N1cnJlbnQ6IChidXR0b24pID0+IHtcbiAgICBpZiAoIShpc051bWJlcihidXR0b24pIHx8IF8uaXNVbmRlZmluZWQoYnV0dG9uKSkgfHwgYnV0dG9uIDwgMCB8fCBidXR0b24gPiAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NsaWNrIGJ1dHRvbiBtdXN0IGJlIDAsIDEsIG9yIDInKTtcbiAgICB9XG4gIH0sXG4gIHNldE5ldHdvcmtDb25uZWN0aW9uOiAodHlwZSkgPT4ge1xuICAgIGlmICghaXNOdW1iZXIodHlwZSkgfHwgWzAsIDEsIDIsIDQsIDZdLmluZGV4T2YodHlwZSkgPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgdHlwZSBtdXN0IGJlIG9uZSBvZiAwLCAxLCAyLCA0LCA2Jyk7XG4gICAgfVxuICB9LFxufTtcblxuZXhwb3J0IHt2YWxpZGF0b3JzfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQSxTQUFTQSxRQUFULENBQWtCQyxDQUFsQixFQUFxQjtFQUNuQixPQUFPQyxlQUFBLENBQUVGLFFBQUYsQ0FBV0MsQ0FBWCxLQUFpQixDQUFDQyxlQUFBLENBQUVDLEtBQUYsQ0FBUUMsUUFBUSxDQUFDSCxDQUFELEVBQUksRUFBSixDQUFoQixDQUFsQixJQUE4QyxDQUFDQyxlQUFBLENBQUVDLEtBQUYsQ0FBUUUsVUFBVSxDQUFDSixDQUFELENBQWxCLENBQXREO0FBQ0Q7O0FBRUQsU0FBU0ssV0FBVCxDQUFxQkMsRUFBckIsRUFBeUI7RUFDdkIsSUFBSSxDQUFDTCxlQUFBLENBQUVGLFFBQUYsQ0FBV08sRUFBWCxDQUFELElBQW1CQSxFQUFFLEdBQUcsQ0FBNUIsRUFBK0I7SUFDN0IsTUFBTSxJQUFJQyxLQUFKLENBQVUsZ0RBQVYsQ0FBTjtFQUNEO0FBQ0Y7O0FBRUQsTUFBTUMsVUFBVSxHQUFHO0VBQ2pCQyxNQUFNLEVBQUdDLEdBQUQsSUFBUztJQUVmLElBQUksQ0FBQ0EsR0FBRCxJQUFRLENBQUNBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLDJDQUFWLENBQWIsRUFBcUU7TUFDbkUsTUFBTSxJQUFJSixLQUFKLENBQVUsd0NBQVYsQ0FBTjtJQUNEO0VBQ0YsQ0FOZ0I7RUFPakJLLFlBQVksRUFBR04sRUFBRCxJQUFRO0lBQ3BCRCxXQUFXLENBQUNDLEVBQUQsQ0FBWDtFQUNELENBVGdCO0VBVWpCTyxrQkFBa0IsRUFBR1AsRUFBRCxJQUFRO0lBQzFCRCxXQUFXLENBQUNDLEVBQUQsQ0FBWDtFQUNELENBWmdCO0VBYWpCUSxZQUFZLEVBQUdDLE1BQUQsSUFBWTtJQUN4QixJQUFJLEVBQUVoQixRQUFRLENBQUNnQixNQUFELENBQVIsSUFBb0JkLGVBQUEsQ0FBRWUsV0FBRixDQUFjRCxNQUFkLENBQXRCLEtBQWdEQSxNQUFNLEdBQUcsQ0FBekQsSUFBOERBLE1BQU0sR0FBRyxDQUEzRSxFQUE4RTtNQUM1RSxNQUFNLElBQUlSLEtBQUosQ0FBVSxpQ0FBVixDQUFOO0lBQ0Q7RUFDRixDQWpCZ0I7RUFrQmpCVSxvQkFBb0IsRUFBR0MsSUFBRCxJQUFVO0lBQzlCLElBQUksQ0FBQ25CLFFBQVEsQ0FBQ21CLElBQUQsQ0FBVCxJQUFtQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCQyxPQUFoQixDQUF3QkQsSUFBeEIsTUFBa0MsQ0FBQyxDQUExRCxFQUE2RDtNQUMzRCxNQUFNLElBQUlYLEtBQUosQ0FBVSwyQ0FBVixDQUFOO0lBQ0Q7RUFDRjtBQXRCZ0IsQ0FBbkIifQ==