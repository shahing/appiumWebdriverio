{"version":3,"file":"shutdown.js","names":["commands","shutdownDevice","exec","args","requireUdid","e","_","includes","message","log","debug","LOG_PREFIX"],"sources":["../../../lib/subcommands/shutdown.js"],"sourcesContent":["import _ from 'lodash';\nimport log, { LOG_PREFIX } from '../logger';\n\nconst commands = {};\n\n/**\n * Shutdown the given Simulator if it is running.\n *\n * @throws {Error} If the corresponding simctl subcommand command\n *                 returns non-zero return code.\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.shutdownDevice = async function shutdownDevice () {\n  try {\n    await this.exec('shutdown', {\n      args: [this.requireUdid('shutdown')],\n    });\n  } catch (e) {\n    if (!_.includes(e.message, 'current state: Shutdown')) {\n      throw e;\n    }\n    log.debug(LOG_PREFIX, `Simulator already in 'Shutdown' state. Continuing`);\n  }\n};\n\nexport default commands;\n"],"mappings":";;;;;;;;AAAA;AACA;AAA4C;AAAA;AAE5C,MAAMA,QAAQ,GAAG,CAAC,CAAC;AASnBA,QAAQ,CAACC,cAAc,GAAG,eAAeA,cAAc,GAAI;EACzD,IAAI;IACF,MAAM,IAAI,CAACC,IAAI,CAAC,UAAU,EAAE;MAC1BC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAI,CAACC,eAAC,CAACC,QAAQ,CAACF,CAAC,CAACG,OAAO,EAAE,yBAAyB,CAAC,EAAE;MACrD,MAAMH,CAAC;IACT;IACAI,eAAG,CAACC,KAAK,CAACC,kBAAU,EAAG,mDAAkD,CAAC;EAC5E;AACF,CAAC;AAAC,eAEaX,QAAQ;AAAA"}