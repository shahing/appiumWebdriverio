"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("source-map-support/register");
var _rimraf = _interopRequireDefault(require("rimraf"));
var _uuid = require("uuid");
var _path = _interopRequireDefault(require("path"));
var _os = _interopRequireDefault(require("os"));
var _fs = _interopRequireDefault(require("fs"));
var _bluebird = _interopRequireDefault(require("bluebird"));
const commands = {};
const rimrafAsync = _bluebird.default.promisify(_rimraf.default);
const readFileAsync = _bluebird.default.promisify(_fs.default.readFile);
commands.getScreenshot = async function getScreenshot() {
  const udid = this.requireUdid('io screenshot');
  const pathToScreenshotPng = _path.default.resolve(_os.default.tmpdir(), `${(0, _uuid.v4)()}.png`);
  try {
    await this.exec('io', {
      args: [udid, 'screenshot', pathToScreenshotPng]
    });
    return (await readFileAsync(pathToScreenshotPng)).toString('base64');
  } finally {
    await rimrafAsync(pathToScreenshotPng);
  }
};
var _default = commands;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tYW5kcyIsInJpbXJhZkFzeW5jIiwiQiIsInByb21pc2lmeSIsInJpbXJhZiIsInJlYWRGaWxlQXN5bmMiLCJmcyIsInJlYWRGaWxlIiwiZ2V0U2NyZWVuc2hvdCIsInVkaWQiLCJyZXF1aXJlVWRpZCIsInBhdGhUb1NjcmVlbnNob3RQbmciLCJwYXRoIiwicmVzb2x2ZSIsIm9zIiwidG1wZGlyIiwidXVpZFY0IiwiZXhlYyIsImFyZ3MiLCJ0b1N0cmluZyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9zdWJjb21tYW5kcy9pby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmltcmFmIGZyb20gJ3JpbXJhZic7XG5pbXBvcnQgeyB2NCBhcyB1dWlkVjQgfSBmcm9tICd1dWlkJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IG9zIGZyb20gJ29zJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5cbmNvbnN0IGNvbW1hbmRzID0ge307XG5jb25zdCByaW1yYWZBc3luYyA9IEIucHJvbWlzaWZ5KHJpbXJhZik7XG5jb25zdCByZWFkRmlsZUFzeW5jID0gQi5wcm9taXNpZnkoZnMucmVhZEZpbGUpO1xuXG4vKipcbiAqIEdldHMgYmFzZTY0IHNjcmVlbnNob3QgZm9yIGRldmljZVxuICogSXQgaXMgcmVxdWlyZWQgdGhhdCBTaW11bGF0b3IgaXMgaW4gX2Jvb3RlZF8gc3RhdGUuXG4gKlxuICogQHNpbmNlIFhjb2RlIFNESyA4LjFcbiAqIEByZXR1cm4ge3N0cmluZ30gQmFzZTY0LWVuY29kZWQgU2ltdWxhdG9yIHNjcmVlbnNob3QuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGNvcnJlc3BvbmRpbmcgc2ltY3RsIHN1YmNvbW1hbmQgY29tbWFuZFxuICogICAgICAgICAgICAgICAgIHJldHVybnMgbm9uLXplcm8gcmV0dXJuIGNvZGUuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGB1ZGlkYCBpbnN0YW5jZSBwcm9wZXJ0eSBpcyB1bnNldFxuICovXG5jb21tYW5kcy5nZXRTY3JlZW5zaG90ID0gYXN5bmMgZnVuY3Rpb24gZ2V0U2NyZWVuc2hvdCAoKSB7XG4gIGNvbnN0IHVkaWQgPSB0aGlzLnJlcXVpcmVVZGlkKCdpbyBzY3JlZW5zaG90Jyk7XG4gIGNvbnN0IHBhdGhUb1NjcmVlbnNob3RQbmcgPSBwYXRoLnJlc29sdmUob3MudG1wZGlyKCksIGAke3V1aWRWNCgpfS5wbmdgKTtcbiAgdHJ5IHtcbiAgICBhd2FpdCB0aGlzLmV4ZWMoJ2lvJywge1xuICAgICAgYXJnczogW3VkaWQsICdzY3JlZW5zaG90JywgcGF0aFRvU2NyZWVuc2hvdFBuZ10sXG4gICAgfSk7XG4gICAgcmV0dXJuIChhd2FpdCByZWFkRmlsZUFzeW5jKHBhdGhUb1NjcmVlbnNob3RQbmcpKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gIH0gZmluYWxseSB7XG4gICAgYXdhaXQgcmltcmFmQXN5bmMocGF0aFRvU2NyZWVuc2hvdFBuZyk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbW1hbmRzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE1BQU1BLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFDbkIsTUFBTUMsV0FBVyxHQUFHQyxpQkFBQyxDQUFDQyxTQUFTLENBQUNDLGVBQU0sQ0FBQztBQUN2QyxNQUFNQyxhQUFhLEdBQUdILGlCQUFDLENBQUNDLFNBQVMsQ0FBQ0csV0FBRSxDQUFDQyxRQUFRLENBQUM7QUFZOUNQLFFBQVEsQ0FBQ1EsYUFBYSxHQUFHLGVBQWVBLGFBQWEsR0FBSTtFQUN2RCxNQUFNQyxJQUFJLEdBQUcsSUFBSSxDQUFDQyxXQUFXLENBQUMsZUFBZSxDQUFDO0VBQzlDLE1BQU1DLG1CQUFtQixHQUFHQyxhQUFJLENBQUNDLE9BQU8sQ0FBQ0MsV0FBRSxDQUFDQyxNQUFNLEVBQUUsRUFBRyxHQUFFLElBQUFDLFFBQU0sR0FBRyxNQUFLLENBQUM7RUFDeEUsSUFBSTtJQUNGLE1BQU0sSUFBSSxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO01BQ3BCQyxJQUFJLEVBQUUsQ0FBQ1QsSUFBSSxFQUFFLFlBQVksRUFBRUUsbUJBQW1CO0lBQ2hELENBQUMsQ0FBQztJQUNGLE9BQU8sQ0FBQyxNQUFNTixhQUFhLENBQUNNLG1CQUFtQixDQUFDLEVBQUVRLFFBQVEsQ0FBQyxRQUFRLENBQUM7RUFDdEUsQ0FBQyxTQUFTO0lBQ1IsTUFBTWxCLFdBQVcsQ0FBQ1UsbUJBQW1CLENBQUM7RUFDeEM7QUFDRixDQUFDO0FBQUMsZUFFYVgsUUFBUTtBQUFBIn0=