{"version":3,"file":"mike.js","names":["DEFAULT_REMOTE","DEFAULT_BRANCH","MIKE_VER_STRING","Mike","remote","branch","prefix","configFile","_mikeVerified","constructor","opts","verifyMike","stdout","exec","includes","Error","err","getMikeArgs","cmdName","cmdArgs","mikeCmd","mikeArgs","verify","args","log","debug","join","list","split","map","s","trim","filter","Boolean","setDefault","alias","deploy","version","push","shouldPush","shouldRebase","commit"],"sources":["../../lib/mike.js"],"sourcesContent":["import {exec} from 'teen_process';\nimport log from './logger';\n\nconst DEFAULT_REMOTE = 'origin';\nconst DEFAULT_BRANCH = 'gh-pages';\nconst MIKE_VER_STRING = 'mike 1.';\n\nexport class Mike {\n  /** @type string */ remote;\n  /** @type string */ branch;\n  /** @type string? */ prefix;\n  /** @type string */ configFile;\n  /** @type boolean */ _mikeVerified = false;\n\n  constructor(/** @type MikeOpts */ opts) {\n    this.remote = opts.remote || DEFAULT_REMOTE;\n    this.branch = opts.branch || DEFAULT_BRANCH;\n    this.prefix = opts.prefix;\n    this.configFile = opts.configFile;\n  }\n\n  /**\n   * Throw an error if the 'mike' binary cannot be found\n   *\n   * @throws Error\n   */\n  async verifyMike() {\n    if (this._mikeVerified) {\n      return;\n    }\n    try {\n      const {stdout} = await this.exec('--version', [], false);\n      if (!stdout.includes(MIKE_VER_STRING)) {\n        throw new Error('Mike was installed but was not version 1.x');\n      }\n    } catch (err) {\n      throw new Error(`Could not verify appropriate mike binary exists: ${err}`);\n    }\n    this._mikeVerified = true;\n  }\n\n  /**\n   * Get an array of args based on the class members that can be used with Mike-related subprocess\n   * execution\n   *\n   * @param {string} cmdName - the name of the mike command to run\n   * @param {string[]} cmdArgs - an array of command-specific arguments\n   *\n   * @returns string[]\n   */\n  getMikeArgs(cmdName, cmdArgs) {\n    return [\n      cmdName,\n      ...cmdArgs,\n      '--config-file',\n      this.configFile,\n      '--remote',\n      this.remote,\n      '--branch',\n      this.branch,\n      '--prefix',\n      this.prefix,\n    ];\n  }\n\n  /**\n   * Exec mike as a subprocess\n   *\n   * @param {string} mikeCmd - the mike command to run\n   * @param {string[]} [mikeArgs=[]] - the arguments to pass to the mike command\n   * @param {boolean?} [verify=true] - whether to verify mike exists first\n   *\n   * @returns Promise<import('teen_process').ExecResult<string>>\n   */\n  async exec(mikeCmd, mikeArgs = [], verify = true) {\n    if (verify) {\n      await this.verifyMike();\n    }\n    const args = this.getMikeArgs(mikeCmd, mikeArgs);\n    log.debug(`Running mike ${args.join(' ')}`);\n    return await exec('mike', args);\n  }\n\n  /**\n   * Return the list of mike deploys\n   *\n   * @returns string[]\n   */\n  async list() {\n    const {stdout} = await this.exec('list');\n    return stdout\n      .split('\\n')\n      .map((s) => s.trim())\n      .filter(Boolean);\n  }\n\n  /**\n   * Set the default version or alias\n   *\n   * @param {string} alias - the version or alias\n   */\n  async setDefault(alias) {\n    await this.exec('set-default', [alias]);\n  }\n\n  /**\n   * Deploy docs to the branch\n   *\n   * @param {MikeDeployOpts} opts - the deploy options\n   */\n  async deploy(opts) {\n    const args = [opts.version];\n    if (opts.alias) {\n      args.push(opts.alias, '--update-aliases');\n    }\n    if (opts.shouldPush) {\n      args.push('--push');\n    }\n    if (opts.shouldRebase) {\n      args.push('--rebase');\n    }\n    if (opts.commit) {\n      args.push('--message', opts.commit);\n    }\n    await this.exec('deploy', args);\n  }\n}\n\n/**\n * @typedef MikeOpts - options for instantiating a Mike object\n * @property {string} [remote=\"origin\"] - the git remote to push docs to\n * @property {string} [branch=\"gh-pages\"] - the git branch to push docs to\n * @property {string?} prefix - the path prefix on the branch if any\n * @property {string} configFile - the mkdocs config file to use\n */\n\n/**\n * @typedef MikeDeployOpts - options for deploying docs with Mike\n * @param {string} version - the version to deploy\n * @param {string?} alias - the alias to alias (or re-alias) the version\n * @param {string?} commit - the commit message to use as an override\n * @param {boolean?} shouldPush - whether mike should push the commits to the remote\n * @param {boolean?} shouldRebase - whether mike should rebase\n */\n"],"mappings":"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"}