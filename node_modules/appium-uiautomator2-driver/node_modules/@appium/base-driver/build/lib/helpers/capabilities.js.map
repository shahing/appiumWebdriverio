{"version":3,"file":"capabilities.js","names":["isW3cCaps","caps","_","isPlainObject","isFirstMatchValid","isArray","firstMatch","isEmpty","every","isAlwaysMatchValid","alwaysMatch","has","fixCaps","oldCaps","desiredCapConstraints","log","clone","booleanCaps","keys","pickBy","k","isBoolean","cap","value","isString","toLowerCase","warn","intCaps","isNumber","trim","newValue","parseInt","parseFloat"],"sources":["../../../lib/helpers/capabilities.js"],"sourcesContent":["// @ts-check\n\nimport _ from 'lodash';\n\nfunction isW3cCaps(caps) {\n  if (!_.isPlainObject(caps)) {\n    return false;\n  }\n\n  const isFirstMatchValid = () =>\n    _.isArray(caps.firstMatch) &&\n    !_.isEmpty(caps.firstMatch) &&\n    _.every(caps.firstMatch, _.isPlainObject);\n  const isAlwaysMatchValid = () => _.isPlainObject(caps.alwaysMatch);\n  if (_.has(caps, 'firstMatch') && _.has(caps, 'alwaysMatch')) {\n    return isFirstMatchValid() && isAlwaysMatchValid();\n  }\n  if (_.has(caps, 'firstMatch')) {\n    return isFirstMatchValid();\n  }\n  if (_.has(caps, 'alwaysMatch')) {\n    return isAlwaysMatchValid();\n  }\n  return false;\n}\n\n/**\n *\n * @template {Constraints} C\n * @param {any} oldCaps\n * @param {C} desiredCapConstraints\n * @param {AppiumLogger} log\n * @returns {Capabilities<C>}\n */\nfunction fixCaps(oldCaps, desiredCapConstraints, log) {\n  let caps = _.clone(oldCaps);\n\n  // boolean capabilities can be passed in as strings 'false' and 'true'\n  // which we want to translate into boolean values\n  let booleanCaps = _.keys(_.pickBy(desiredCapConstraints, (k) => k.isBoolean === true));\n  for (let cap of booleanCaps) {\n    let value = oldCaps[cap];\n    if (_.isString(value)) {\n      value = value.toLowerCase();\n      if (value === 'true' || value === 'false') {\n        log.warn(\n          `Capability '${cap}' changed from string to boolean. This may cause unexpected behavior`\n        );\n        caps[cap] = value === 'true';\n      }\n    }\n  }\n\n  // int capabilities are often sent in as strings by frameworks\n  let intCaps = /** @type {import('type-fest').StringKeyOf<typeof caps>[]} */ (\n    _.keys(_.pickBy(desiredCapConstraints, (k) => k.isNumber === true))\n  );\n  for (let cap of intCaps) {\n    let value = oldCaps[cap];\n    if (_.isString(value)) {\n      value = value.trim();\n      let newValue = parseInt(value, 10);\n      if (value !== `${newValue}`) {\n        newValue = parseFloat(value);\n      }\n      log.warn(\n        `Capability '${cap}' changed from string ('${value}') to integer (${newValue}). This may cause unexpected behavior`\n      );\n      caps[cap] = newValue;\n    }\n  }\n\n  return caps;\n}\n\nexport {isW3cCaps, fixCaps};\n\n/**\n * @typedef {import('@appium/types').Constraints} Constraints\n * @typedef {import('@appium/types').AppiumLogger} AppiumLogger\n * @typedef {import('@appium/types').StringRecord} StringRecord\n * @typedef {import('@appium/types').BaseDriverCapConstraints} BaseDriverCapConstraints\n */\n\n/**\n * @template {Constraints} [C=BaseDriverCapConstraints]\n * @template {StringRecord|void} [Extra=void]\n * @typedef {import('@appium/types').Capabilities<C, Extra>} Capabilities\n */\n"],"mappings":";;;;;;;;;;AAEA;;;;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,IAAI,CAACC,eAAA,CAAEC,aAAF,CAAgBF,IAAhB,CAAL,EAA4B;IAC1B,OAAO,KAAP;EACD;;EAED,MAAMG,iBAAiB,GAAG,MACxBF,eAAA,CAAEG,OAAF,CAAUJ,IAAI,CAACK,UAAf,KACA,CAACJ,eAAA,CAAEK,OAAF,CAAUN,IAAI,CAACK,UAAf,CADD,IAEAJ,eAAA,CAAEM,KAAF,CAAQP,IAAI,CAACK,UAAb,EAAyBJ,eAAA,CAAEC,aAA3B,CAHF;;EAIA,MAAMM,kBAAkB,GAAG,MAAMP,eAAA,CAAEC,aAAF,CAAgBF,IAAI,CAACS,WAArB,CAAjC;;EACA,IAAIR,eAAA,CAAES,GAAF,CAAMV,IAAN,EAAY,YAAZ,KAA6BC,eAAA,CAAES,GAAF,CAAMV,IAAN,EAAY,aAAZ,CAAjC,EAA6D;IAC3D,OAAOG,iBAAiB,MAAMK,kBAAkB,EAAhD;EACD;;EACD,IAAIP,eAAA,CAAES,GAAF,CAAMV,IAAN,EAAY,YAAZ,CAAJ,EAA+B;IAC7B,OAAOG,iBAAiB,EAAxB;EACD;;EACD,IAAIF,eAAA,CAAES,GAAF,CAAMV,IAAN,EAAY,aAAZ,CAAJ,EAAgC;IAC9B,OAAOQ,kBAAkB,EAAzB;EACD;;EACD,OAAO,KAAP;AACD;;AAUD,SAASG,OAAT,CAAiBC,OAAjB,EAA0BC,qBAA1B,EAAiDC,GAAjD,EAAsD;EACpD,IAAId,IAAI,GAAGC,eAAA,CAAEc,KAAF,CAAQH,OAAR,CAAX;;EAIA,IAAII,WAAW,GAAGf,eAAA,CAAEgB,IAAF,CAAOhB,eAAA,CAAEiB,MAAF,CAASL,qBAAT,EAAiCM,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgB,IAAvD,CAAP,CAAlB;;EACA,KAAK,IAAIC,GAAT,IAAgBL,WAAhB,EAA6B;IAC3B,IAAIM,KAAK,GAAGV,OAAO,CAACS,GAAD,CAAnB;;IACA,IAAIpB,eAAA,CAAEsB,QAAF,CAAWD,KAAX,CAAJ,EAAuB;MACrBA,KAAK,GAAGA,KAAK,CAACE,WAAN,EAAR;;MACA,IAAIF,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAAlC,EAA2C;QACzCR,GAAG,CAACW,IAAJ,CACG,eAAcJ,GAAI,sEADrB;QAGArB,IAAI,CAACqB,GAAD,CAAJ,GAAYC,KAAK,KAAK,MAAtB;MACD;IACF;EACF;;EAGD,IAAII,OAAO,GACTzB,eAAA,CAAEgB,IAAF,CAAOhB,eAAA,CAAEiB,MAAF,CAASL,qBAAT,EAAiCM,CAAD,IAAOA,CAAC,CAACQ,QAAF,KAAe,IAAtD,CAAP,CADF;;EAGA,KAAK,IAAIN,GAAT,IAAgBK,OAAhB,EAAyB;IACvB,IAAIJ,KAAK,GAAGV,OAAO,CAACS,GAAD,CAAnB;;IACA,IAAIpB,eAAA,CAAEsB,QAAF,CAAWD,KAAX,CAAJ,EAAuB;MACrBA,KAAK,GAAGA,KAAK,CAACM,IAAN,EAAR;MACA,IAAIC,QAAQ,GAAGC,QAAQ,CAACR,KAAD,EAAQ,EAAR,CAAvB;;MACA,IAAIA,KAAK,KAAM,GAAEO,QAAS,EAA1B,EAA6B;QAC3BA,QAAQ,GAAGE,UAAU,CAACT,KAAD,CAArB;MACD;;MACDR,GAAG,CAACW,IAAJ,CACG,eAAcJ,GAAI,2BAA0BC,KAAM,kBAAiBO,QAAS,uCAD/E;MAGA7B,IAAI,CAACqB,GAAD,CAAJ,GAAYQ,QAAZ;IACD;EACF;;EAED,OAAO7B,IAAP;AACD"}