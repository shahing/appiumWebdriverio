{"version":3,"file":"helpers.js","names":["formatResponseValue","resValue","_","isUndefined","duplicateKeys","MJSONWP_ELEMENT_KEY","W3C_ELEMENT_KEY","formatStatus","responseBody","isPlainObject","omit"],"sources":["../../../lib/protocol/helpers.js"],"sourcesContent":["import _ from 'lodash';\nimport {duplicateKeys} from '../basedriver/helpers';\nimport {MJSONWP_ELEMENT_KEY, W3C_ELEMENT_KEY} from '../constants';\n\n/**\n * Preprocesses the resulting value for API responses,\n * so they have keys for both W3C and JSONWP protocols.\n * The argument value is NOT mutated\n *\n * @param {?Object} resValue The actual response value\n * @returns {?Object} Either modified value or the same one if\n * nothing has been modified\n */\nfunction formatResponseValue(resValue) {\n  if (_.isUndefined(resValue)) {\n    // convert undefined to null\n    return null;\n  }\n  // If the MJSONWP element key format (ELEMENT) was provided, add a duplicate key (element-6066-11e4-a52e-4f735466cecf)\n  // If the W3C element key format (element-6066-11e4-a52e-4f735466cecf) was provided, add a duplicate key (ELEMENT)\n  return duplicateKeys(resValue, MJSONWP_ELEMENT_KEY, W3C_ELEMENT_KEY);\n}\n\n/**\n * Properly formats the status for API responses,\n * so they are correct for the W3C protocol.\n *\n * @param {Object} responseBody\n * @returns {Object} The fixed response body\n */\nfunction formatStatus(responseBody) {\n  return _.isPlainObject(responseBody) ? _.omit(responseBody, ['status']) : responseBody;\n}\n\nexport {MJSONWP_ELEMENT_KEY, W3C_ELEMENT_KEY, formatResponseValue, formatStatus};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAWA,SAASA,mBAAT,CAA6BC,QAA7B,EAAuC;EACrC,IAAIC,eAAA,CAAEC,WAAF,CAAcF,QAAd,CAAJ,EAA6B;IAE3B,OAAO,IAAP;EACD;;EAGD,OAAO,IAAAG,sBAAA,EAAcH,QAAd,EAAwBI,8BAAxB,EAA6CC,0BAA7C,CAAP;AACD;;AASD,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;EAClC,OAAON,eAAA,CAAEO,aAAF,CAAgBD,YAAhB,IAAgCN,eAAA,CAAEQ,IAAF,CAAOF,YAAP,EAAqB,CAAC,QAAD,CAArB,CAAhC,GAAmEA,YAA1E;AACD"}