{"version":3,"file":"websocket.js","names":["DEFAULT_WS_PATHNAME_PREFIX","addWebSocketHandler","handlerPathname","handlerServer","server","_","isUndefined","webSocketsMapping","on","request","socket","head","currentPathname","URL","url","pathname","wsServer","toPairs","handleUpgrade","ws","emit","destroy","getWebSocketHandlers","keysFilter","isEmpty","reduce","acc","isString","includes","removeWebSocketHandler","close","client","clients","terminate","ign","removeAllWebSocketHandlers","some","B","all","keys","map"],"sources":["../../../lib/express/websocket.js"],"sourcesContent":["/* eslint-disable require-await */\nimport _ from 'lodash';\nimport {URL} from 'url';\nimport B from 'bluebird';\n\nconst DEFAULT_WS_PATHNAME_PREFIX = '/ws';\n\n/**\n * Adds websocket handler to express server instance.\n * It is expected this function is called in Express\n * server instance context.\n *\n * @this {AppiumServer} - An instance of express HTTP server.\n * @param {string} handlerPathname - Web socket endpoint path starting with\n * a single slash character. It is recommended to always add\n * DEFAULT_WS_PATHNAME_PREFIX to all web socket pathnames.\n * @param {import('ws').Server} handlerServer - WebSocket server instance. See\n * https://github.com/websockets/ws/pull/885 for more details\n * on how to configure the handler properly.\n * @returns {Promise<void>}\n */\nasync function addWebSocketHandler(handlerPathname, handlerServer) {\n  const server = /** @type {AppiumServer} */ (this);\n  if (_.isUndefined(this.webSocketsMapping)) {\n    server.webSocketsMapping = {};\n    // https://github.com/websockets/ws/pull/885\n    server.on('upgrade', (request, socket, head) => {\n      let currentPathname;\n      try {\n        // @ts-expect-error\n        currentPathname = new URL(request.url).pathname;\n      } catch {\n        currentPathname = request.url;\n      }\n      for (const [pathname, wsServer] of _.toPairs(server.webSocketsMapping)) {\n        if (currentPathname === pathname) {\n          wsServer.handleUpgrade(request, socket, head, (ws) => {\n            wsServer.emit('connection', ws, request);\n          });\n          return;\n        }\n      }\n      socket.destroy();\n    });\n  }\n  this.webSocketsMapping[handlerPathname] = handlerServer;\n}\n\n/**\n * Returns web socket handlers registered for the given server\n * instance.\n * It is expected this function is called in Express\n * server instance context.\n *\n * @this {AppiumServer}\n * @param {string?} [keysFilter] - Only include pathnames with given\n * `keysFilter` value if set. All pairs will be included by default.\n * @returns {Promise<Record<string, import('ws').Server>>} pathnames to websocket server instances mapping matching the search criteria or an empty object otherwise.\n */\n// eslint-disable-next-line require-await\nasync function getWebSocketHandlers(keysFilter = null) {\n  if (_.isEmpty(this.webSocketsMapping)) {\n    return {};\n  }\n\n  return _.toPairs(this.webSocketsMapping).reduce((acc, [pathname, wsServer]) => {\n    if (!_.isString(keysFilter) || pathname.includes(keysFilter)) {\n      acc[pathname] = wsServer;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Removes existing websocket handler from express server instance.\n * The call is ignored if the given `handlerPathname` handler\n * is not present in the handlers list.\n * It is expected this function is called in Express\n * server instance context.\n * @this {AppiumServer}\n * @param {string} handlerPathname - Websocket endpoint path.\n * @returns {Promise<boolean>} true if the handlerPathname was found and deleted\n */\n// eslint-disable-next-line require-await\nasync function removeWebSocketHandler(handlerPathname) {\n  const wsServer = this.webSocketsMapping?.[handlerPathname];\n  if (!wsServer) {\n    return false;\n  }\n\n  try {\n    wsServer.close();\n    for (const client of wsServer.clients || []) {\n      client.terminate();\n    }\n    return true;\n  } catch (ign) {\n    // ignore\n  } finally {\n    delete this.webSocketsMapping[handlerPathname];\n  }\n  return false;\n}\n\n/**\n * Removes all existing websocket handler from express server instance.\n * It is expected this function is called in Express\n * server instance context.\n * @this {AppiumServer}\n * @returns {Promise<boolean>} true if at least one handler has been deleted\n */\nasync function removeAllWebSocketHandlers() {\n  if (_.isEmpty(this.webSocketsMapping)) {\n    return false;\n  }\n\n  return _.some(\n    await B.all(\n      _.keys(this.webSocketsMapping).map((pathname) => this.removeWebSocketHandler(pathname))\n    )\n  );\n}\n\nexport {\n  addWebSocketHandler,\n  removeWebSocketHandler,\n  removeAllWebSocketHandlers,\n  getWebSocketHandlers,\n  DEFAULT_WS_PATHNAME_PREFIX,\n};\n\n/**\n * @typedef {import('@appium/types').AppiumServer} AppiumServer\n */\n"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,0BAA0B,GAAG,KAAnC;;;AAgBA,eAAeC,mBAAf,CAAmCC,eAAnC,EAAoDC,aAApD,EAAmE;EACjE,MAAMC,MAAM,GAAgC,IAA5C;;EACA,IAAIC,eAAA,CAAEC,WAAF,CAAc,KAAKC,iBAAnB,CAAJ,EAA2C;IACzCH,MAAM,CAACG,iBAAP,GAA2B,EAA3B;IAEAH,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,CAACC,OAAD,EAAUC,MAAV,EAAkBC,IAAlB,KAA2B;MAC9C,IAAIC,eAAJ;;MACA,IAAI;QAEFA,eAAe,GAAG,IAAIC,QAAJ,CAAQJ,OAAO,CAACK,GAAhB,EAAqBC,QAAvC;MACD,CAHD,CAGE,MAAM;QACNH,eAAe,GAAGH,OAAO,CAACK,GAA1B;MACD;;MACD,KAAK,MAAM,CAACC,QAAD,EAAWC,QAAX,CAAX,IAAmCX,eAAA,CAAEY,OAAF,CAAUb,MAAM,CAACG,iBAAjB,CAAnC,EAAwE;QACtE,IAAIK,eAAe,KAAKG,QAAxB,EAAkC;UAChCC,QAAQ,CAACE,aAAT,CAAuBT,OAAvB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA+CQ,EAAD,IAAQ;YACpDH,QAAQ,CAACI,IAAT,CAAc,YAAd,EAA4BD,EAA5B,EAAgCV,OAAhC;UACD,CAFD;UAGA;QACD;MACF;;MACDC,MAAM,CAACW,OAAP;IACD,CAjBD;EAkBD;;EACD,KAAKd,iBAAL,CAAuBL,eAAvB,IAA0CC,aAA1C;AACD;;AAcD,eAAemB,oBAAf,CAAoCC,UAAU,GAAG,IAAjD,EAAuD;EACrD,IAAIlB,eAAA,CAAEmB,OAAF,CAAU,KAAKjB,iBAAf,CAAJ,EAAuC;IACrC,OAAO,EAAP;EACD;;EAED,OAAOF,eAAA,CAAEY,OAAF,CAAU,KAAKV,iBAAf,EAAkCkB,MAAlC,CAAyC,CAACC,GAAD,EAAM,CAACX,QAAD,EAAWC,QAAX,CAAN,KAA+B;IAC7E,IAAI,CAACX,eAAA,CAAEsB,QAAF,CAAWJ,UAAX,CAAD,IAA2BR,QAAQ,CAACa,QAAT,CAAkBL,UAAlB,CAA/B,EAA8D;MAC5DG,GAAG,CAACX,QAAD,CAAH,GAAgBC,QAAhB;IACD;;IACD,OAAOU,GAAP;EACD,CALM,EAKJ,EALI,CAAP;AAMD;;AAaD,eAAeG,sBAAf,CAAsC3B,eAAtC,EAAuD;EAAA;;EACrD,MAAMc,QAAQ,4BAAG,KAAKT,iBAAR,0DAAG,sBAAyBL,eAAzB,CAAjB;;EACA,IAAI,CAACc,QAAL,EAAe;IACb,OAAO,KAAP;EACD;;EAED,IAAI;IACFA,QAAQ,CAACc,KAAT;;IACA,KAAK,MAAMC,MAAX,IAAqBf,QAAQ,CAACgB,OAAT,IAAoB,EAAzC,EAA6C;MAC3CD,MAAM,CAACE,SAAP;IACD;;IACD,OAAO,IAAP;EACD,CAND,CAME,OAAOC,GAAP,EAAY,CAEb,CARD,SAQU;IACR,OAAO,KAAK3B,iBAAL,CAAuBL,eAAvB,CAAP;EACD;;EACD,OAAO,KAAP;AACD;;AASD,eAAeiC,0BAAf,GAA4C;EAC1C,IAAI9B,eAAA,CAAEmB,OAAF,CAAU,KAAKjB,iBAAf,CAAJ,EAAuC;IACrC,OAAO,KAAP;EACD;;EAED,OAAOF,eAAA,CAAE+B,IAAF,CACL,MAAMC,iBAAA,CAAEC,GAAF,CACJjC,eAAA,CAAEkC,IAAF,CAAO,KAAKhC,iBAAZ,EAA+BiC,GAA/B,CAAoCzB,QAAD,IAAc,KAAKc,sBAAL,CAA4Bd,QAA5B,CAAjD,CADI,CADD,CAAP;AAKD"}