{"version":3,"file":"server-builder.js","names":["GRADLE_VERSION_KEY","GRADLE_URL_PREFIX","GRADLE_URL_TEMPLATE","GRADLE_MAX_ERROR_LOG_LINES","DEPENDENCY_PROP_NAMES","VERSION_KEYS","buildServerSigningConfig","args","zipAlign","keystoreFile","keystorePassword","keyAlias","keyPassword","ServerBuilder","constructor","log","serverPath","showGradleLog","buildConfiguration","versionConfiguration","toolsVersions","serverVersions","_","reduce","acc","value","key","includes","warn","testAppPackage","signingConfig","propName","build","setGradleWrapperVersion","insertAdditionalDependencies","runBuildProcess","getCommand","cmd","system","isWindows","path","resolve","buildProperty","filter","map","serverVersion","gradleProperty","charAt","toUpperCase","slice","Boolean","push","keys","upperFirst","k","v","version","propertiesPath","originalProperties","fs","readFile","newProperties","updateGradleDistUrl","writeFile","propertiesContent","replace","RegExp","escapeRegExp","hasAdditionalDeps","isArray","Error","isEmpty","line","trim","dep","test","buildPath","configuration","prefix","deps","info","updateDependencyLines","debug","join","gradlebuild","SubProcess","cwd","stdio","windowsVerbatimArguments","buildLastLines","logMsg","on","startsWith","EOL","length","start","err","msg","message","errorAndThrow"],"sources":["../../lib/server-builder.js"],"sourcesContent":["import { SubProcess } from 'teen_process';\nimport { fs, system } from 'appium/support';\nimport _ from 'lodash';\nimport path from 'path';\nimport { EOL } from 'os';\nimport { updateDependencyLines } from './utils';\n\nconst GRADLE_VERSION_KEY = 'gradle';\nconst GRADLE_URL_PREFIX = 'distributionUrl=';\nconst GRADLE_URL_TEMPLATE = 'https\\\\://services.gradle.org/distributions/gradle-VERSION-all.zip';\nconst GRADLE_MAX_ERROR_LOG_LINES = 15;\nconst DEPENDENCY_PROP_NAMES = ['additionalAppDependencies', 'additionalAndroidTestDependencies'];\n\nconst VERSION_KEYS = [\n  GRADLE_VERSION_KEY,\n  'androidGradlePlugin',\n  'compileSdk',\n  'buildTools',\n  'minSdk',\n  'targetSdk',\n  'kotlin',\n  'sourceCompatibility',\n  'targetCompatibility',\n  'jvmTarget',\n  'composeVersion',\n  'annotationVersion'\n];\n\nfunction buildServerSigningConfig (args) {\n  return {\n    zipAlign: true,\n    keystoreFile: args.keystoreFile,\n    keystorePassword: args.keystorePassword,\n    keyAlias: args.keyAlias,\n    keyPassword: args.keyPassword\n  };\n}\n\nclass ServerBuilder {\n  constructor (log, args = {}) {\n    this.log = log;\n    this.serverPath = args.serverPath;\n    this.showGradleLog = args.showGradleLog;\n\n    const buildConfiguration = args.buildConfiguration || {};\n\n    const versionConfiguration = buildConfiguration.toolsVersions || {};\n    this.serverVersions = _.reduce(versionConfiguration, (acc, value, key) => {\n      if (VERSION_KEYS.includes(key)) {\n        acc[key] = value;\n      } else {\n        log.warn(`Got unexpected '${key}' in toolsVersion block of the build configuration`);\n      }\n      return acc;\n    }, {});\n\n    this.testAppPackage = args.testAppPackage;\n    this.signingConfig = args.signingConfig;\n\n    for (const propName of DEPENDENCY_PROP_NAMES) {\n      this[propName] = buildConfiguration[propName] || [];\n    }\n  }\n\n  async build () {\n    if (this.serverVersions[GRADLE_VERSION_KEY]) {\n      await this.setGradleWrapperVersion(this.serverVersions[GRADLE_VERSION_KEY]);\n    }\n\n    await this.insertAdditionalDependencies();\n\n    await this.runBuildProcess();\n  }\n\n  getCommand () {\n    const cmd = system.isWindows() ? 'gradlew.bat' : path.resolve(this.serverPath, 'gradlew');\n    const buildProperty = (key, value) => value ? `-P${key}=${value}` : null;\n    let args = VERSION_KEYS\n      .filter((key) => key !== GRADLE_VERSION_KEY)\n      .map((key) => {\n        const serverVersion = this.serverVersions[key];\n        const gradleProperty = `appium${key.charAt(0).toUpperCase()}${key.slice(1)}`;\n        return buildProperty(gradleProperty, serverVersion);\n      })\n      .filter(Boolean);\n\n    if (this.signingConfig) {\n      args.push(...(\n        _.keys(this.signingConfig)\n        .map((key) => [`appium${_.upperFirst(key)}`, this.signingConfig[key]])\n        .map(([k, v]) => buildProperty(k, v))\n        .filter(Boolean)\n      ));\n    }\n\n    if (this.testAppPackage) {\n      args.push(buildProperty('appiumTargetPackage', this.testAppPackage));\n    }\n    args.push('app:assembleAndroidTest');\n\n    return {cmd, args};\n  }\n\n  async setGradleWrapperVersion (version) {\n    const propertiesPath = path.resolve(this.serverPath, 'gradle', 'wrapper', 'gradle-wrapper.properties');\n    const originalProperties = await fs.readFile(propertiesPath, 'utf8');\n    const newProperties = this.updateGradleDistUrl(originalProperties, version);\n    await fs.writeFile(propertiesPath, newProperties, 'utf8');\n  }\n\n  updateGradleDistUrl (propertiesContent, version) {\n    return propertiesContent.replace(\n      new RegExp(`^(${_.escapeRegExp(GRADLE_URL_PREFIX)}).+$`, 'gm'),\n      `$1${GRADLE_URL_TEMPLATE.replace('VERSION', version)}`\n    );\n  }\n\n  async insertAdditionalDependencies () {\n    let hasAdditionalDeps = false;\n    for (const propName of DEPENDENCY_PROP_NAMES) {\n      if (!_.isArray(this[propName])) {\n        throw new Error(`'${propName}' must be an array`);\n      }\n      if (_.isEmpty(this[propName].filter((line) => _.trim(line)))) {\n        continue;\n      }\n\n      for (const dep of this[propName]) {\n        if (/[\\s'\\\\$]/.test(dep)) {\n          throw new Error('Single quotes, dollar characters and whitespace characters' +\n            ` are disallowed in additional dependencies: ${dep}`);\n        }\n      }\n      hasAdditionalDeps = true;\n    }\n    if (!hasAdditionalDeps) {\n      return;\n    }\n\n    const buildPath = path.resolve(this.serverPath, 'app', 'build.gradle.kts');\n    let configuration = await fs.readFile(buildPath, 'utf8');\n    for (const propName of DEPENDENCY_PROP_NAMES) {\n      const prefix = propName === DEPENDENCY_PROP_NAMES[0]\n        ? 'implementation'\n        : 'androidTestImplementation';\n      const deps = this[propName]\n        .filter((line) => _.trim(line))\n        .map((line) => `${prefix}(\"${line}\")`);\n      if (_.isEmpty(deps)) {\n        continue;\n      }\n\n      this.log.info(`Adding the following ${propName} to build.gradle.kts: ${deps}`);\n      configuration = updateDependencyLines(configuration, propName, deps);\n    }\n    await fs.writeFile(buildPath, configuration, 'utf8');\n  }\n\n  async runBuildProcess () {\n    const {cmd, args} = this.getCommand();\n    this.log.debug(`Beginning build with command '${cmd} ${args.join(' ')}' ` +\n      `in directory '${this.serverPath}'`);\n    const gradlebuild = new SubProcess(cmd, args, {\n      cwd: this.serverPath,\n      stdio: ['ignore', 'pipe', 'pipe'],\n      windowsVerbatimArguments: true\n    });\n    let buildLastLines = [];\n\n    const logMsg = `Output from Gradle ${this.showGradleLog ? 'will' : 'will not'} be logged`;\n    this.log.debug(`${logMsg}. To change this, use 'showGradleLog' desired capability`);\n    gradlebuild.on('stream-line', (line) => {\n      if (this.showGradleLog) {\n        if (line.startsWith('[STDERR]')) {\n          this.log.warn(`[Gradle] ${line}`);\n        } else {\n          this.log.info(`[Gradle] ${line}`);\n        }\n      }\n      buildLastLines.push(`${EOL}${line}`);\n      if (buildLastLines.length > GRADLE_MAX_ERROR_LOG_LINES) {\n        buildLastLines = buildLastLines.slice(-GRADLE_MAX_ERROR_LOG_LINES);\n      }\n    });\n\n    try {\n      await gradlebuild.start();\n      await gradlebuild.join();\n    } catch (err) {\n      let msg = `Unable to build Espresso server - ${err.message}\\n` +\n        `Gradle error message:${EOL}${buildLastLines}`;\n      this.log.errorAndThrow(msg);\n    }\n  }\n}\n\nexport { ServerBuilder, VERSION_KEYS, GRADLE_URL_TEMPLATE, buildServerSigningConfig };\nexport default ServerBuilder;\n"],"mappings":"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"}