{"version":3,"file":"utils.js","names":["PACKAGE_INFO","MODULE_NAME","qualifyActivityName","activityName","packageName","some","name","_","includes","dotPos","indexOf","copyGradleProjectRecursively","sourceBaseDir","targetBaseDir","fs","walkDir","itemPath","isDirectory","relativePath","path","relative","targetPath","resolve","isInGradleBuildDir","sep","mkdirp","copyFile","requireOptions","opts","requiredKeys","missingKeys","difference","keys","isEmpty","Error","updateDependencyLines","originalContent","dependencyPlaceholder","dependencyLines","configurationLines","split","searchRe","RegExp","escapeRegExp","placeholderIndex","findIndex","line","test","placeholderLine","indentLen","length","trimStart","splice","map","repeat","join","getPackageInfo","currentDir","dirname","__filename","isAtFsRoot","manifestPath","exists","manifestPayload","JSON","parse","readFile","ign","getPackageInfoSync","_fs","existsSync","readFileSync"],"sources":["../../lib/utils.js"],"sourcesContent":["import { fs, mkdirp } from 'appium/support';\nimport _ from 'lodash';\nimport path from 'path';\nimport _fs from 'fs';\n\nlet PACKAGE_INFO = null;\nconst MODULE_NAME = 'appium-espresso-driver';\n\n/**\n * https://android.googlesource.com/platform/frameworks/base/+/master/tools/aapt/Resource.cpp#755\n *\n * @param {string} activityName\n * @param {string} packageName\n * @returns {string} The qualified activity name\n */\nfunction qualifyActivityName (activityName, packageName) {\n  // if either activity or package name is not set\n  // or any of these contain wildcards then there is\n  // no point in qualifying the activity name\n  if ([activityName, packageName].some((name) => !name || _.includes(name, '*'))) {\n    return activityName;\n  }\n\n  const dotPos = activityName.indexOf('.');\n  if (dotPos > 0) {\n    return activityName;\n  }\n  return `${packageName}${dotPos === 0 ? '' : '.'}${activityName}`;\n}\n\n/**\n * Recursively copy all files except build directories contents\n * @param sourceBaseDir {string} directory to copy files from\n * @param targetBaseDir {string} directory to copy files to\n */\nasync function copyGradleProjectRecursively (sourceBaseDir, targetBaseDir) {\n  await fs.walkDir(sourceBaseDir, true, async (itemPath, isDirectory) => {\n    const relativePath = path.relative(sourceBaseDir, itemPath);\n    const targetPath = path.resolve(targetBaseDir, relativePath);\n\n    const isInGradleBuildDir = `${path.sep}${itemPath}`.includes(`${path.sep}build${path.sep}`);\n    if (isInGradleBuildDir) {\n      return false;\n    }\n\n    if (isDirectory) {\n      await mkdirp(targetPath);\n    } else {\n      await fs.copyFile(itemPath, targetPath);\n    }\n    return false;\n  });\n}\n\nfunction requireOptions (opts, requiredKeys = []) {\n  const missingKeys = _.difference(requiredKeys, _.keys(opts));\n  if (!_.isEmpty(missingKeys)) {\n    throw new Error(`The following options are required: ${missingKeys}`);\n  }\n  return opts;\n}\n\nfunction updateDependencyLines (originalContent, dependencyPlaceholder, dependencyLines) {\n  const configurationLines = originalContent.split('\\n');\n  const searchRe = new RegExp(`^\\\\s*//\\\\s*\\\\b${_.escapeRegExp(dependencyPlaceholder)}\\\\b`, 'm');\n  const placeholderIndex = configurationLines.findIndex((line) => searchRe.test(line));\n  if (placeholderIndex < 0) {\n    return originalContent;\n  }\n\n  const placeholderLine = configurationLines[placeholderIndex];\n  const indentLen = placeholderLine.length - _.trimStart(placeholderLine).length;\n  configurationLines.splice(placeholderIndex + 1, 0, ...(dependencyLines\n    .map((line) => `${' '.repeat(indentLen)}${line}`)));\n  return configurationLines.join('\\n');\n}\n\n/**\n * Fetches the module info from package.json\n *\n * @returns {object} The full path to module's package.json and its payload\n * @throws {Error} If package.json cannot be found\n */\nasync function getPackageInfo () {\n  if (PACKAGE_INFO) {\n    return PACKAGE_INFO;\n  }\n\n  let currentDir = path.dirname(path.resolve(__filename));\n  let isAtFsRoot = false;\n  while (!isAtFsRoot) {\n    const manifestPath = path.join(currentDir, 'package.json');\n    try {\n      if (await fs.exists(manifestPath)) {\n        const manifestPayload = JSON.parse(await fs.readFile(manifestPath, 'utf8'));\n        if (manifestPayload.name === MODULE_NAME) {\n          PACKAGE_INFO = {\n            manifestPath,\n            manifestPayload\n          };\n          return PACKAGE_INFO;\n        }\n      }\n    } catch (ign) {}\n    currentDir = path.dirname(currentDir);\n    isAtFsRoot = currentDir.length <= path.dirname(currentDir).length;\n  }\n  throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n}\n\n/**\n * Fetches the module info from package.json synchronously\n *\n * @returns {object} The full path to module's package.json and its payload\n * @throws {Error} If package.json cannot be found\n */\nfunction getPackageInfoSync () {\n  if (PACKAGE_INFO) {\n    return PACKAGE_INFO;\n  }\n\n  let currentDir = path.dirname(path.resolve(__filename));\n  let isAtFsRoot = false;\n  while (!isAtFsRoot) {\n    const manifestPath = path.join(currentDir, 'package.json');\n    try {\n      if (_fs.existsSync(manifestPath)) {\n        const manifestPayload = JSON.parse(_fs.readFileSync(manifestPath, 'utf8'));\n        if (manifestPayload.name === MODULE_NAME) {\n          PACKAGE_INFO = {\n            manifestPath,\n            manifestPayload\n          };\n          return PACKAGE_INFO;\n        }\n      }\n    } catch (ign) {}\n    currentDir = path.dirname(currentDir);\n    isAtFsRoot = currentDir.length <= path.dirname(currentDir).length;\n  }\n  throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n}\n\nexport {\n  qualifyActivityName, copyGradleProjectRecursively, requireOptions,\n  updateDependencyLines, getPackageInfo, getPackageInfoSync\n};\n"],"mappings":"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"}