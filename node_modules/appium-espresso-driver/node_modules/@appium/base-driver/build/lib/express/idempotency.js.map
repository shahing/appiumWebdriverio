{"version":3,"file":"idempotency.js","names":["CACHE_SIZE","IDEMPOTENT_RESPONSES","LRU","max","updateAgeOnGet","dispose","key","response","fs","rimrafSync","MONITORED_METHODS","IDEMPOTENCY_KEY_HEADER","process","on","resPaths","values","map","filter","Boolean","resPath","ign","cacheResponse","req","res","responseStateListener","EventEmitter","set","method","path","tmpFile","resolve","os","tmpdir","util","uuidV4","responseListener","createWriteStream","emitClose","originalSocketWriter","socket","write","bind","patchedWriter","chunk","encoding","next","writable","writeError","isResponseFullySent","once","e","end","has","log","info","emit","message","delete","get","handleIdempotency","headers","includes","debug","storedMethod","storedPath","warn","rerouteCachedResponse","cachedResPath","exists","createReadStream","pipe","cachedResponsePath"],"sources":["../../../lib/express/idempotency.js"],"sourcesContent":["import log from './logger';\nimport LRU from 'lru-cache';\nimport {fs, util} from '@appium/support';\nimport os from 'os';\nimport path from 'path';\nimport {EventEmitter} from 'events';\n\nconst CACHE_SIZE = 1024;\nconst IDEMPOTENT_RESPONSES = new LRU({\n  max: CACHE_SIZE,\n  updateAgeOnGet: true,\n  dispose(key, {response}) {\n    if (response) {\n      fs.rimrafSync(response);\n    }\n  },\n});\nconst MONITORED_METHODS = ['POST', 'PATCH'];\nconst IDEMPOTENCY_KEY_HEADER = 'x-idempotency-key';\n\nprocess.on('exit', () => {\n  const resPaths = [...IDEMPOTENT_RESPONSES.values()].map(({response}) => response).filter(Boolean);\n  for (const resPath of resPaths) {\n    try {\n      // Asynchronous calls are not supported in onExit handler\n      fs.rimrafSync(resPath);\n    } catch (ign) {}\n  }\n});\n\nfunction cacheResponse(key, req, res) {\n  const responseStateListener = new EventEmitter();\n  IDEMPOTENT_RESPONSES.set(key, {\n    method: req.method,\n    path: req.path,\n    response: null,\n    responseStateListener,\n  });\n  const tmpFile = path.resolve(os.tmpdir(), `${util.uuidV4()}.response`);\n  const responseListener = fs.createWriteStream(tmpFile, {\n    emitClose: true,\n  });\n  const originalSocketWriter = res.socket.write.bind(res.socket);\n  const patchedWriter = (chunk, encoding, next) => {\n    if (responseListener.writable) {\n      responseListener.write(chunk);\n    }\n    return originalSocketWriter(chunk, encoding, next);\n  };\n  res.socket.write = patchedWriter;\n  let writeError = null;\n  let isResponseFullySent = false;\n  responseListener.once('error', (e) => {\n    writeError = e;\n  });\n  res.once('finish', () => {\n    isResponseFullySent = true;\n    responseListener.end();\n  });\n  res.once('close', () => {\n    if (!isResponseFullySent) {\n      responseListener.end();\n    }\n  });\n  responseListener.once('close', () => {\n    if (res.socket?.write === patchedWriter) {\n      res.socket.write = originalSocketWriter;\n    }\n\n    if (!IDEMPOTENT_RESPONSES.has(key)) {\n      log.info(\n        `Could not cache the response identified by '${key}'. ` +\n          `Cache consistency has been damaged`\n      );\n      return responseStateListener.emit('ready', null);\n    }\n    if (writeError) {\n      log.info(`Could not cache the response identified by '${key}': ${writeError.message}`);\n      IDEMPOTENT_RESPONSES.delete(key);\n      return responseStateListener.emit('ready', null);\n    }\n    if (!isResponseFullySent) {\n      log.info(\n        `Could not cache the response identified by '${key}', ` +\n          `because it has not been completed`\n      );\n      log.info('Does the client terminate connections too early?');\n      IDEMPOTENT_RESPONSES.delete(key);\n      return responseStateListener.emit('ready', null);\n    }\n\n    IDEMPOTENT_RESPONSES.get(key).response = tmpFile;\n    responseStateListener.emit('ready', tmpFile);\n  });\n}\n\nasync function handleIdempotency(req, res, next) {\n  const key = req.headers[IDEMPOTENCY_KEY_HEADER];\n  if (!key) {\n    return next();\n  }\n  if (!MONITORED_METHODS.includes(req.method)) {\n    // GET, DELETE, etc. requests are idempotent by default\n    // there is no need to cache them\n    return next();\n  }\n\n  log.debug(`Request idempotency key: ${key}`);\n  if (!IDEMPOTENT_RESPONSES.has(key)) {\n    cacheResponse(key, req, res);\n    return next();\n  }\n\n  const {\n    method: storedMethod,\n    path: storedPath,\n    response,\n    responseStateListener,\n  } = IDEMPOTENT_RESPONSES.get(key);\n  if (req.method !== storedMethod || req.path !== storedPath) {\n    log.warn(`Got two different requests with the same idempotency key '${key}'`);\n    log.warn('Is the client generating idempotency keys properly?');\n    return next();\n  }\n\n  const rerouteCachedResponse = async (cachedResPath) => {\n    if (!(await fs.exists(cachedResPath))) {\n      IDEMPOTENT_RESPONSES.delete(key);\n      log.warn(`Could not read the cached response identified by key '${key}'`);\n      log.warn('The temporary storage is not accessible anymore');\n      return next();\n    }\n    fs.createReadStream(cachedResPath).pipe(res.socket);\n  };\n\n  if (response) {\n    log.info(`The same request with the idempotency key '${key}' has been already processed`);\n    log.info(`Rerouting its response to the current request`);\n    await rerouteCachedResponse(response);\n  } else {\n    log.info(`The same request with the idempotency key '${key}' is being processed`);\n    log.info(`Waiting for the response to be rerouted to the current request`);\n    responseStateListener.once('ready', async (cachedResponsePath) => {\n      if (!cachedResponsePath) {\n        return next();\n      }\n      await rerouteCachedResponse(cachedResponsePath);\n    });\n  }\n}\n\nexport {handleIdempotency};\n"],"mappings":"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"}